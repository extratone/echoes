[13:26:43.900] M [CLIENT] Exe module file: \private\var\containers\Bundle\Application\999BCA6A-7222-4D8D-B76B-827D23BA9F6D\client.app\client
[13:26:43.901] M [CLIENT] Current directory: /private/var/containers/Bundle/Application/999BCA6A-7222-4D8D-B76B-827D23BA9F6D/client.app
[13:26:43.901] M [CLIENT] Initializing client....
[13:26:43.901] M [GAME] Init utils.dll (1063838562)
[13:26:43.902] M [IOS] application:willFinishLaunchingWithOptions:withConfig: return 1
[13:26:43.912] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:43.914] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:43.914] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:43.914] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:43.914] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:43.914] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:43.915] M [IOS] application:didFinishLaunchingWithOptions:
[13:26:43.936] M [IOS] application:didFinishLaunchingWithOptions: return 1
[13:26:43.940] M [FILESYSTEM] NXCloudFileLoader cloud_engine_init basepath: /private/var/mobile/Containers/Data/Application/A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9/Documents/cloudfiles, pkgname: 
[13:26:43.940] M [FILESYSTEM] Succeeded to create FileLoader, basepath: \private\var\mobile\Containers\Data\Application\A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9\Documents\cloudfiles, name: cloud, opener: cloud
[13:26:43.941] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: discrete, opener: os, root: \private\var\mobile\Containers\Data\Application\A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9\Documents\res
[13:26:43.941] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: evepatch, opener: os, root: \private\var\mobile\Containers\Data\Application\A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9\Documents\0\1
[13:26:43.941] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: discrete, opener: os, root: \private\var\containers\Bundle\Application\999BCA6A-7222-4D8D-B76B-827D23BA9F6D\client.app\res
[13:26:43.943] M [FILESYSTEM] Package /private/var/containers/Bundle/Application/999BCA6A-7222-4D8D-B76B-827D23BA9F6D/client.app/res0.npk (size 1056077644) under opener cfile is loaded.
[13:26:43.943] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: npk, opener: os, root: \private\var\containers\Bundle\Application\999BCA6A-7222-4D8D-B76B-827D23BA9F6D\client.app/res0
[13:26:43.944] M [FILESYSTEM] Package /private/var/containers/Bundle/Application/999BCA6A-7222-4D8D-B76B-827D23BA9F6D/client.app/res1.npk (size 1137656200) under opener cfile is loaded.
[13:26:43.944] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: npk, opener: os, root: \private\var\containers\Bundle\Application\999BCA6A-7222-4D8D-B76B-827D23BA9F6D\client.app/res1
[13:26:43.945] M [FILESYSTEM] Package /private/var/containers/Bundle/Application/999BCA6A-7222-4D8D-B76B-827D23BA9F6D/client.app/res2.npk (size 97820288) under opener cfile is loaded.
[13:26:43.945] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: npk, opener: os, root: \private\var\containers\Bundle\Application\999BCA6A-7222-4D8D-B76B-827D23BA9F6D\client.app/res2
[13:26:43.945] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: npk, opener: os, root: \private\var\mobile\Containers\Data\Application\A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9\Documents\res
[13:26:43.945] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: npk, opener: os, root: \private\var\containers\Bundle\Application\999BCA6A-7222-4D8D-B76B-827D23BA9F6D\client.app\res
[13:26:43.945] M [FILESYSTEM] NXCloudFileLoader cloud_engine_init basepath: /private/var/mobile/Containers/Data/Application/A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9/Documents/cloudfiles, pkgname: script
[13:26:43.945] M [FILESYSTEM] Succeeded to create FileLoader, basepath: \private\var\mobile\Containers\Data\Application\A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9\Documents\cloudfiles, name: cloud, opener: cloud, pkgname: script
[13:26:43.945] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: evepatch, opener: os, root: \private\var\mobile\Containers\Data\Application\A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9\Documents\0\python3.11
[13:26:43.945] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: npk, opener: os, root: \private\var\mobile\Containers\Data\Application\A058BCAC-4C2E-4B8A-B22F-FCD3A641EDA9\Documents\script
[13:26:43.946] M [FILESYSTEM] Package /private/var/containers/Bundle/Application/999BCA6A-7222-4D8D-B76B-827D23BA9F6D/client.app/script.npk (size 34266088) under opener cfile is loaded.
[13:26:43.946] M [FILESYSTEM] Succeeded to create FileLoader, depth: 0, name: npk, opener: os, root: \private\var\containers\Bundle\Application\999BCA6A-7222-4D8D-B76B-827D23BA9F6D\client.app\script
[13:26:43.948] M [GAME] Init utils.dll (1063838562)
[13:26:43.948] M [GAME] Start utils.dll
[13:26:43.948] M [GAME] Init render.dll (1202430036)
[13:26:43.948] M [RENDER] CPU Name , core count of this device is: 8
[13:26:43.948] M [RENDER] device model is iPad13,9
[13:26:43.948] M [GAME] Init python.dll (2389351893)
[13:26:43.948] M [GAME] Init audio.dll (578984847)

ERROR *****************************************************************************
[13:26:43.958] M Wwise comm init fail, check if using the profile libs.

[13:26:43.958] M [GAME] Init world.dll (1725170211)
[13:26:43.958] M [GAME] Init terrain.dll (859673349)
[13:26:43.958] M [GAME] Init expanse.dll (2590033102)
[13:26:43.958] M [GAME] Init voice.dll (809358187)
[13:26:43.958] M [GAME] Init cocosui.dll (2354798637)
[13:26:43.958] M [GAME] Init nxcclive.dll (4178439132)
[13:26:43.958] M [GAME] Init nxapp.dll (2664184578)
[13:26:43.958] M [GAME] Start render.dll
[13:26:43.958] M [GAME] Start python.dll
[13:26:43.958] M [GAME] Start audio.dll
[13:26:43.958] M [GAME] Start world.dll
[13:26:43.958] M [GAME] Start terrain.dll
[13:26:43.958] M [GAME] Start expanse.dll
[13:26:43.958] M [GAME] Start voice.dll
[13:26:43.958] M [GAME] Start cocosui.dll
[13:26:43.958] M [GAME] Start nxcclive.dll
[13:26:43.958] M [GAME] Start nxapp.dll
[13:26:43.961] M [RENDER] Driver: Metal
[13:26:43.961] M [RENDER] Description: Apple M1 GPU
[13:26:43.961] M [RENDER] Version: 1.0
[13:26:43.961] M [RENDER] Vendor: Apple
[13:26:43.961] M [RENDER] Width: 2732, Height: 2048, BitDepth: 40
[13:26:43.961] M [RENDER] -----------------------------------------------------------
[13:26:43.961] M [RENDER] Apple M1 GPU
[13:26:43.963] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/debug_common.fx, tech name: TShader, macro id: 0.
[13:26:43.963] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\debug_common.nfx.

ERROR *****************************************************************************
[13:26:43.966] M [RENDER] Texture file "common/textures/cloud.dds" is not found!

[13:26:43.966] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/debug_landscape.nfx, tech name: LandscapeTech, macro id: 0.
[13:26:43.966] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\debug_landscape.nfx.
[13:26:43.969] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common\shader\simpletech.fx, tech name: TShader, macro id: 1728860963.
[13:26:43.969] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\simpletech.nfx.
[13:26:43.971] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common\shader\simpletech.fx, tech name: TShader, macro id: 3692445482.
[13:26:43.971] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\simpletech.nfx.
[13:26:44.042] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common/shader/cleardepth.nfx, tech name: TShader, macro id: 0.
[13:26:44.042] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\cleardepth.nfx.
[13:26:44.044] M [RENDER] Set render mode: 2732 2048 32 1 1
[13:26:44.051] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common/shader/blendadd.fx, tech name: TShader, macro id: 0.
[13:26:44.051] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\blendadd.nfx.
[13:26:44.052] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common\shader\simpletech.fx, tech name: TShader, macro id: 1405029353.
[13:26:44.052] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\simpletech.nfx.
[13:26:44.053] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common\shader\simpletech.fx, tech name: TShader, macro id: 3981771041.
[13:26:44.053] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\simpletech.nfx.
[13:26:44.053] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common\shader\simpletech.fx, tech name: TShader, macro id: 1566948284.
[13:26:44.053] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\simpletech.nfx.
[13:26:44.054] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common\shader\simpletech.fx, tech name: TShader, macro id: 2082255924.
[13:26:44.054] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\simpletech.nfx.
[13:26:44.054] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common\shader\simpletech.fx, tech name: TShader, macro id: 1269606931.
[13:26:44.054] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\simpletech.nfx.
[13:26:44.055] M [WORLD] pixel decal enable: false
[13:26:44.151] M [PYTHON] NewType world.track: 0x1219e81c0
[13:26:44.151] M [PYTHON] NewType world.space_object: 0x1219e8380
[13:26:44.151] M [PYTHON] NewType world.visibleobject: 0x1219e8540
[13:26:44.151] M [PYTHON] NewType world.sfx: 0x1219e88c0
[13:26:44.151] M [PYTHON] NewType render.multipassdata: 0x1219e8a80
[13:26:44.151] M [PYTHON] NewType world.model: 0x1219e8e00
[13:26:44.151] M [PYTHON] NewType world.impactoverlay: 0x1219e8fc0
[13:26:44.151] M [PYTHON] NewType world.primitives: 0x1219e9180
[13:26:44.151] M [PYTHON] NewType world.primitives_eve: 0x1219e9340
[13:26:44.151] M [PYTHON] NewType world.textobject: 0x1219e9500
[13:26:44.151] M [PYTHON] NewType world.simuiobject: 0x1219e9880
[13:26:44.151] M [PYTHON] NewType world.camera: 0x1219e9a40
[13:26:44.151] M [PYTHON] NewType world.ClothWind: 0x1219e9c00
[13:26:44.151] M [PYTHON] NewType world.decal: 0x1219e9f80
[13:26:44.151] M [PYTHON] NewType world.deferred_decal: 0x1219ea300
[13:26:44.151] M [PYTHON] NewType world.light: 0x1219ea4c0
[13:26:44.151] M [PYTHON] NewType world.anim_ctrl: 0x1219ea680
[13:26:44.151] M [PYTHON] NewType world.scene: 0x1219ea840
[13:26:44.151] M [PYTHON] NewType world.ikbone: 0x1219eaa00
[13:26:44.151] M [PYTHON] NewType world.scene_trigger: 0x1219eabc0
[13:26:44.151] M [PYTHON] NewType world.iksolver: 0x1219eaf40
[13:26:44.151] M [PYTHON] NewType world.turrent_fire_sfx: 0x1219eb2c0
[13:26:44.151] M [PYTHON] NewType world.spot_light_cone: 0x1219eb480
[13:26:44.151] M [PYTHON] NewType world.plane_glow: 0x1219eb800
[13:26:44.151] M [PYTHON] NewType world.spot_light_glow: 0x1219ebb80
[13:26:44.151] M [PYTHON] NewType world.space_light: 0x121a1c000
[13:26:44.151] M [PYTHON] NewType world.plane_glow: 0x121a1c1c0
[13:26:44.152] M [COCOSUI] In the default constructor with capacity of Vector.
[13:26:44.152] M [COCOSUI] 
{
	cocos2d.x.version: cocos2d-x 3.4
	cocos2d.x.compiled_with_profiler: false
	cocos2d.x.build_type: RELEASE
	gl.supports_S3TC: false
	cocos2d.x.compiled_with_gl_state_cache: false
	gl.supports_ETC1: true
	gl.max_texture_size: 4096
	gl.max_samples_allowed: 16
	gl.supports_PVRTC: true
}


[13:26:44.152] M Call script init.init().
[13:26:44.176] M [RENDER] Set render mode: 2732 2048 32 1 0
[13:26:44.176] M [GAME] Initialization completed successfully!
[13:26:44.176] M [GAME] 
[13:26:44.176] M Call script init.start().
[13:26:44.312] M [SCRIPT] Using SafaiaNeoX
[13:26:44.482] M [SCRIPT] [info     ] create_client_session [SessionManager] client_id=-1 log_tag=ripple_log roles=2 sid=-1
[13:26:44.499] M [SCRIPT] [safaia] init ok.
[13:26:44.500] M [IOS] application:rootView:willAppear:
[13:26:44.501] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:44.501] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:44.502] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:44.502] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:44.502] M [IOS] application:layoutSubViews:
[13:26:44.508] M [UNISDK] [NtUniSdk]onFinishInit
[13:26:44.538] M [IOS] application:rootView:didAppear:
[13:26:44.544] M [IOS] applicationDidBecomeActive:
[13:26:44.545] M [SCRIPT] [INFO][on_resume]
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow:
[13:26:44.558] M [IOS] application:supportedInterfaceOrientationsForWindow: return 24
[13:26:44.565] M [SCRIPT] [info     ] [start][real_time=0] [ClientSimManager]
[13:26:44.566] M [SCRIPT] [set_path][new_path=eve][current_path=None]
[13:26:44.660] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=macho_net service=<macho_net state=<ServiceState.STOPPED: 1>>
[13:26:44.660] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<macho_net state=<ServiceState.INIT: 2>>
[13:26:44.660] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<macho_net state=<ServiceState.INITED: 3>>
[13:26:44.660] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<macho_net state=<ServiceState.INITED: 3>>
[13:26:44.662] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'network'} service=<macho_net state=<ServiceState.INITED: 3>>
[13:26:44.663] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=network service=<network state=<ServiceState.STOPPED: 1>>
[13:26:44.663] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:44.663] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:44.663] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<macho_net state=<ServiceState.INITED: 3>> startup_deps=['network']
[13:26:44.663] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<network state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:44.663] M [SCRIPT] [info     ] _start_finish [<Service network>] service=<network state=<ServiceState.STARTED: 7>>
[13:26:44.663] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<network state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:44.663] M [SCRIPT] [info     ] _start_finish [<Service macho_net>] service=<macho_net state=<ServiceState.STARTED: 7>>
[13:26:44.663] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<macho_net state=<ServiceState.STARTED: 7>> startup_deps=['network']
[13:26:44.663] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<macho_net state=<ServiceState.STARTED: 7>>
[13:26:44.663] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['network'] service=<macho_net state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:44.663] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<network state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:44.664] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1321e6220> service=<network state=<ServiceState.RUNNING: 10>>
[13:26:44.664] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1322f3f60> service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:44.664] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:44.665] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=localization service=<localization state=<ServiceState.STOPPED: 1>>
[13:26:44.665] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<localization state=<ServiceState.INIT: 2>>
[13:26:44.665] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<localization state=<ServiceState.INITED: 3>>
[13:26:44.665] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<localization state=<ServiceState.INITED: 3>>
[13:26:44.665] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'localization'} service=<localization state=<ServiceState.INITED: 3>>
[13:26:44.665] M [SCRIPT] [info     ] service init success: <localization state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:44.666] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<localization state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:44.675] M [SCRIPT] [info     ] _start_finish [<Service localization>] service=<localization state=<ServiceState.STARTED: 7>>
[13:26:44.675] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<localization state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:44.675] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<localization state=<ServiceState.STARTED: 7>>
[13:26:44.675] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<localization state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:44.676] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1321e70a0> service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:44.676] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:44.678] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=session_mgr service=<session_mgr state=<ServiceState.STOPPED: 1>>
[13:26:44.679] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<session_mgr state=<ServiceState.INIT: 2>>
[13:26:44.679] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<session_mgr state=<ServiceState.INITED: 3>>
[13:26:44.679] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<session_mgr state=<ServiceState.INITED: 3>>
[13:26:44.679] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'session_mgr'} service=<session_mgr state=<ServiceState.INITED: 3>>
[13:26:44.679] M [SCRIPT] [info     ] service init success: <session_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:44.679] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<session_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:44.679] M [SCRIPT] [info     ] _start_finish [<Service session_mgr>] service=<session_mgr state=<ServiceState.STARTED: 7>>
[13:26:44.679] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<session_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:44.679] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<session_mgr state=<ServiceState.STARTED: 7>>
[13:26:44.679] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<session_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:44.679] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1322d2f60> service=<session_mgr state=<ServiceState.RUNNING: 10>>
[13:26:44.679] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<session_mgr state=<ServiceState.RUNNING: 10>>
[13:26:44.818] M [SCRIPT] Type DCTOOL_ENABLE_ENGINE_DEVICE is True
[13:26:44.823] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=game_manager service=<game_manager state=<ServiceState.STOPPED: 1>>
[13:26:44.823] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<game_manager state=<ServiceState.INIT: 2>>
[13:26:44.823] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<game_manager state=<ServiceState.INITED: 3>>
[13:26:44.823] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<game_manager state=<ServiceState.INITED: 3>>
[13:26:45.139] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'game_manager', 'network', 'target', 'buff', 'drone', 'effect_buff_svc', 'inventory_service', 'state_svc', 'michelle', 'drone_auto_fire', 'godma', 'p2log', 'effect_mgr', 'equip_auto_fire', 'view_manager', 'notifier_manager', 'data_recorder', 'dogma_static', 'tips_manager', 'ui_manager', 'equip_svc', 'setting', 'dataconfig', 'dogma_im', 'localization'} service=<game_manager state=<ServiceState.INITED: 3>>
[13:26:45.139] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=buff service=<buff state=<ServiceState.STOPPED: 1>>
[13:26:45.139] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=data_recorder service=<data_recorder state=<ServiceState.STOPPED: 1>>
[13:26:45.139] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=dataconfig service=<dataconfig state=<ServiceState.STOPPED: 1>>
[13:26:45.140] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=dogma_im service=<dogma_im state=<ServiceState.STOPPED: 1>>
[13:26:45.140] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=dogma_static service=<dogma_static state=<ServiceState.STOPPED: 1>>
[13:26:45.140] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=drone service=<drone state=<ServiceState.STOPPED: 1>>
[13:26:45.140] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=drone_auto_fire service=<drone_auto_fire state=<ServiceState.STOPPED: 1>>
[13:26:45.140] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=effect_buff_svc service=<effect_buff_svc state=<ServiceState.STOPPED: 1>>
[13:26:45.140] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=effect_mgr service=<effect_mgr state=<ServiceState.STOPPED: 1>>
[13:26:45.141] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=equip_auto_fire service=<equip_auto_fire state=<ServiceState.STOPPED: 1>>
[13:26:45.141] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=equip_svc service=<equip_svc state=<ServiceState.STOPPED: 1>>
[13:26:45.141] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=godma service=<godma state=<ServiceState.STOPPED: 1>>
[13:26:45.141] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=inventory_service service=<inventory_service state=<ServiceState.STOPPED: 1>>
[13:26:45.141] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=michelle service=<michelle state=<ServiceState.STOPPED: 1>>
[13:26:45.141] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=notifier_manager service=<notifier_manager state=<ServiceState.STOPPED: 1>>
[13:26:45.141] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=p2log service=<p2log state=<ServiceState.STOPPED: 1>>
[13:26:45.142] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=setting service=<setting state=<ServiceState.STOPPED: 1>>
[13:26:45.142] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=state_svc service=<state_svc state=<ServiceState.STOPPED: 1>>
[13:26:45.142] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=target service=<target state=<ServiceState.STOPPED: 1>>
[13:26:45.143] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=tips_manager service=<tips_manager state=<ServiceState.STOPPED: 1>>
[13:26:45.143] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=ui_manager service=<ui_manager state=<ServiceState.STOPPED: 1>>
[13:26:45.143] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=view_manager service=<view_manager state=<ServiceState.STOPPED: 1>>
[13:26:45.143] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.143] M [SCRIPT] [info     ] service init success: <game_manager state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.143] M [SCRIPT] [info     ] service init success: <localization state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.143] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <data_recorder state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <DroneAutoFire combat_future:None > [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <equip_auto_fire state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <equip_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <notifier_manager state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <p2log state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <setting state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <tips_manager state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <ui_manager state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] service init success: <view_manager state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.144] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<game_manager state=<ServiceState.INITED: 3>> startup_deps=['ui_manager', 'macho_net', 'network', 'localization', 'setting', 'equip_svc']
[13:26:45.145] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<ui_manager state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.349] M [SCRIPT] [info     ] _start_finish [<Service ui_manager>] service=<ui_manager state=<ServiceState.STARTED: 7>>
[13:26:45.349] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<ui_manager state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.349] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:45.349] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<network state=<ServiceState.RUNNING: 10>>
[13:26:45.349] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:45.349] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<setting state=<ServiceState.INITED: 3>> startup_deps=['localization']
[13:26:45.349] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:45.350] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.350] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [error    ] [duplicate][key=init_key][value=] [setting.data]
[13:26:45.351] M [SCRIPT] [info     ] _start_finish [<Service setting>] service=<setting state=<ServiceState.STARTED: 7>>
[13:26:45.351] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<setting state=<ServiceState.STARTED: 7>> startup_deps=['localization']
[13:26:45.351] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<equip_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.351] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<inventory_service state=<ServiceState.INITED: 3>>
[13:26:45.351] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'inventory_service'} service=<inventory_service state=<ServiceState.INITED: 3>>
[13:26:45.352] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.352] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<inventory_service state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.352] M [SCRIPT] [info     ] _start_finish [<Service inventory_service>] service=<inventory_service state=<ServiceState.STARTED: 7>>
[13:26:45.352] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<inventory_service state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.352] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<inventory_service state=<ServiceState.STARTED: 7>>
[13:26:45.352] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<inventory_service state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.352] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1341611e0> service=<inventory_service state=<ServiceState.RUNNING: 10>>
[13:26:45.352] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<inventory_service state=<ServiceState.RUNNING: 10>>
[13:26:45.352] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<godma state=<ServiceState.INITED: 3>>
[13:26:45.352] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'network', 'dataconfig', 'dogma_static', 'godma'} service=<godma state=<ServiceState.INITED: 3>>
[13:26:45.352] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.352] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.353] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.353] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.353] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<godma state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.353] M [SCRIPT] [info     ] _start_finish [<Service godma>] service=<godma state=<ServiceState.STARTED: 7>>
[13:26:45.353] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<godma state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.353] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<godma state=<ServiceState.STARTED: 7>>
[13:26:45.353] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['dogma_static', 'network'] service=<godma state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.353] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<dogma_static state=<ServiceState.INITED: 3>>
[13:26:45.353] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<dogma_static state=<ServiceState.INITED: 3>> startup_deps=['dataconfig']
[13:26:45.353] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<dataconfig state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.353] M [SCRIPT] [info     ] Getting startup data [<Service dataconfig>]
[13:26:45.362] M [SCRIPT] [info     ] _start_finish [<Service dataconfig>] service=<dataconfig state=<ServiceState.STARTED: 7>>
[13:26:45.362] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<dataconfig state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.401] M [SCRIPT] [info     ] _start_finish [<Service dogma_static>] service=<dogma_static state=<ServiceState.STARTED: 7>>
[13:26:45.401] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<dogma_static state=<ServiceState.STARTED: 7>> startup_deps=['dataconfig']
[13:26:45.401] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['dataconfig'] service=<dogma_static state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.401] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<dataconfig state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.401] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13412e4a0> service=<dataconfig state=<ServiceState.RUNNING: 10>>
[13:26:45.401] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13412fbe0> service=<dogma_static state=<ServiceState.RUNNING: 10>>
[13:26:45.401] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<network state=<ServiceState.RUNNING: 10>>
[13:26:45.401] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134160420> service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:45.401] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:45.401] M [SCRIPT] [info     ] _start_finish [<Service equip_svc>] service=<equip_svc state=<ServiceState.STARTED: 7>>
[13:26:45.401] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<equip_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.402] M [SCRIPT] [info     ] _start_finish [<Service game_manager>] service=<game_manager state=<ServiceState.STARTED: 7>>
[13:26:45.402] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<game_manager state=<ServiceState.STARTED: 7>> startup_deps=['ui_manager', 'macho_net', 'network', 'localization', 'setting', 'equip_svc']
[13:26:45.402] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<game_manager state=<ServiceState.STARTED: 7>>
[13:26:45.402] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['ui_manager', 'macho_net', 'network', 'localization', 'setting', 'equip_svc'] service=<game_manager state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.402] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['tips_manager', 'notifier_manager', 'view_manager', 'localization', 'p2log', 'data_recorder'] service=<ui_manager state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.402] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<tips_manager state=<ServiceState.INITED: 3>>
[13:26:45.402] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<tips_manager state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.402] M [SCRIPT] [info     ] _start_finish [<Service tips_manager>] service=<tips_manager state=<ServiceState.STARTED: 7>>
[13:26:45.402] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<tips_manager state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.402] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<tips_manager state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.402] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134179d60> service=<tips_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.402] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<notifier_manager state=<ServiceState.INITED: 3>>
[13:26:45.402] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<notifier_manager state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.402] M [SCRIPT] [info     ] _start_finish [<Service notifier_manager>] service=<notifier_manager state=<ServiceState.STARTED: 7>>
[13:26:45.402] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<notifier_manager state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.402] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<notifier_manager state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.402] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134162620> service=<notifier_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.403] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<view_manager state=<ServiceState.INITED: 3>>
[13:26:45.403] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<view_manager state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.403] M [SCRIPT] [info     ] _start_finish [<Service view_manager>] service=<view_manager state=<ServiceState.STARTED: 7>>
[13:26:45.403] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<view_manager state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.403] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<view_manager state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.403] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13417b4a0> service=<view_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.403] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:45.403] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<p2log state=<ServiceState.INITED: 3>>
[13:26:45.403] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<p2log state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.403] M [SCRIPT] [info     ] _start_finish [<Service p2log>] service=<p2log state=<ServiceState.STARTED: 7>>
[13:26:45.403] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<p2log state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.403] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<p2log state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.403] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1341630a0> service=<p2log state=<ServiceState.RUNNING: 10>>
[13:26:45.403] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<data_recorder state=<ServiceState.INITED: 3>>
[13:26:45.403] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<data_recorder state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.403] M [SCRIPT] [info     ] _start_finish [<Service data_recorder>] service=<data_recorder state=<ServiceState.STARTED: 7>>
[13:26:45.403] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<data_recorder state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<data_recorder state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.404] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13412dbe0> service=<data_recorder state=<ServiceState.RUNNING: 10>>
[13:26:45.404] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13417a7e0> service=<ui_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<network state=<ServiceState.RUNNING: 10>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['localization'] service=<setting state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:45.404] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134163d60> service=<setting state=<ServiceState.RUNNING: 10>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['equip_auto_fire'] service=<equip_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<equip_auto_fire state=<ServiceState.INITED: 3>>
[13:26:45.404] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<equip_auto_fire state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.404] M [SCRIPT] [info     ] _start_finish [<Service equip_auto_fire>] service=<equip_auto_fire state=<ServiceState.STARTED: 7>>
[13:26:45.404] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<equip_auto_fire state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['michelle', 'godma', 'target', 'drone_auto_fire'] service=<equip_auto_fire state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.404] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<michelle state=<ServiceState.INITED: 3>>
[13:26:45.404] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<michelle state=<ServiceState.INITED: 3>> startup_deps=['macho_net']
[13:26:45.404] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:45.426] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common/shader/downsample.fx, tech name: Downsample, macro id: 0.
[13:26:45.426] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\downsample.nfx.
[13:26:45.428] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\evedistortion.fx, tech name: EVEDistortion, macro id: 0.
[13:26:45.428] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\evedistortion.nfx.
[13:26:45.429] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\cloak_distortion.fx, tech name: CloakDistortion, macro id: 0.
[13:26:45.429] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\cloak_distortion.nfx.
[13:26:45.430] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\sigma_starmap_dimmed_view.nfx, tech name: DimmedView, macro id: 0.
[13:26:45.430] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\sigma_starmap_dimmed_view.nfx.
[13:26:45.431] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: common/shader/downsample.nfx, tech name: Downsample, macro id: 0.
[13:26:45.431] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: common\shader\downsample.nfx.
[13:26:45.431] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\dof_coc.nfx, tech name: CalCOC, macro id: 0.
[13:26:45.431] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\dof_coc.nfx.
[13:26:45.432] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\dof_bokeh.nfx, tech name: Bokeh, macro id: 0.
[13:26:45.432] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\dof_bokeh.nfx.
[13:26:45.434] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\dof_combine.nfx, tech name: Combine, macro id: 0.
[13:26:45.434] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\dof_combine.nfx.
[13:26:45.435] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\dof_coc.nfx, tech name: DilateCOC, macro id: 0.
[13:26:45.435] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\dof_coc.nfx.
[13:26:45.435] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\dof_gaussian.nfx, tech name: Gaussian, macro id: 0.
[13:26:45.435] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\dof_gaussian.nfx.
[13:26:45.436] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\downsample4x.nfx, tech name: Downsample4x, macro id: 0.
[13:26:45.436] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\downsample4x.nfx.
[13:26:45.437] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\dual_filter_downsample.nfx, tech name: DualFilterDownsample, macro id: 0.
[13:26:45.437] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\dual_filter_downsample.nfx.
[13:26:45.438] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\dual_filter_upsample.nfx, tech name: DualFilterUpsample, macro id: 0.
[13:26:45.438] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\dual_filter_upsample.nfx.
[13:26:45.438] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\bloom_compose.nfx, tech name: BloomCompose, macro id: 0.
[13:26:45.438] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\bloom_compose.nfx.
[13:26:45.439] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\envfog_color.nfx, tech name: EnvironmentFogColor, macro id: 0.
[13:26:45.439] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\envfog_color.nfx.
[13:26:45.440] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\envfog_blur.nfx, tech name: EnvironmentFogBlur, macro id: 0.
[13:26:45.440] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\envfog_blur.nfx.
[13:26:45.441] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\envfog_blur_y.nfx, tech name: EnvironmentFogBlurY, macro id: 0.
[13:26:45.441] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\envfog_blur_y.nfx.
[13:26:45.442] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\envfog_composite.nfx, tech name: EnvironmentFogComposit, macro id: 0.
[13:26:45.442] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\envfog_composite.nfx.
[13:26:45.442] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\godrays_calc.nfx, tech name: GodRaysCalc, macro id: 0.
[13:26:45.443] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\godrays_calc.nfx.
[13:26:45.444] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\godrays_blit.nfx, tech name: GodRaysBlit, macro id: 0.
[13:26:45.444] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\godrays_blit.nfx.
[13:26:45.444] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\gray.nfx, tech name: Gray, macro id: 0.
[13:26:45.444] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\gray.nfx.
[13:26:45.445] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\merge_offscreen.nfx, tech name: Merge, macro id: 0.
[13:26:45.445] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\merge_offscreen.nfx.
[13:26:45.446] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/posteffects/eye_adaptation.nfx, tech name: DownSample, macro id: 0.
[13:26:45.446] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\posteffects\eye_adaptation.nfx.
[13:26:45.447] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/posteffects/eye_adaptation.nfx, tech name: Reduce, macro id: 0.
[13:26:45.447] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\posteffects\eye_adaptation.nfx.
[13:26:45.447] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/postprocess/tonmapping.nfx, tech name: ToneMapping, macro id: 0.
[13:26:45.447] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\tonmapping.nfx.
[13:26:45.448] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\radial_blur.nfx, tech name: TShader, macro id: 0.
[13:26:45.448] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\radial_blur.nfx.
[13:26:45.448] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\screen_filter.nfx, tech name: ScreenFilter, macro id: 0.
[13:26:45.448] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\screen_filter.nfx.
[13:26:45.449] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\simple_bloom_compose.nfx, tech name: BloomCompose, macro id: 0.
[13:26:45.449] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\simple_bloom_compose.nfx.
[13:26:45.450] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\uiscene_tonemapping.nfx, tech name: UIScene_Tonemapping, macro id: 0.
[13:26:45.450] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\uiscene_tonemapping.nfx.
[13:26:45.451] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\postprocess\wire_frames.fx, tech name: WireFrames, macro id: 0.
[13:26:45.451] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\postprocess\wire_frames.nfx.
[13:26:45.452] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\eve_skybox.fx, tech name: TShader, macro id: 2376595178.
[13:26:45.452] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\eve_skybox.nfx.
[13:26:45.458] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader\eve_skybox.fx, tech name: TShader, macro id: 3954623016.
[13:26:45.458] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\eve_skybox.nfx.
[13:26:45.459] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/shadow_receive.nfx, tech name: TShader, macro id: 3675657280.
[13:26:45.459] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\built_in\shadow\shadow_receive.nfx.
[13:26:45.459] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/shadow_cast.nfx, tech name: TShader, macro id: 0.
[13:26:45.459] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\built_in\shadow\shadow_cast.nfx.
[13:26:45.460] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.460] M [RENDER] [INFO] [shader] *** EffectMgr::CreateObj, filename: shader\built_in\shadow\debugoutput.nfx.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.
[13:26:45.461] M [RENDER] [INFO] [shader] *** TechniqueMgr::CreateEffect, filename: shader/built_in/shadow/debugoutput.nfx, tech name: TShader, macro id: 0.

WARNING *****************************************************************************
[13:26:45.461] M [WORLD] custom render system 2 already add to scene!


WARNING *****************************************************************************
[13:26:45.461] M [WORLD] IColSystem invalid, can't build collision detection for this scene

[13:26:45.461] M [SCRIPT] [info     ] _start_finish [<Service michelle>] service=<michelle state=<ServiceState.STARTED: 7>>
[13:26:45.462] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<michelle state=<ServiceState.STARTED: 7>> startup_deps=['macho_net']
[13:26:45.462] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net', 'macho_net', 'dataconfig', 'godma', 'dogma_im', 'buff', 'drone'] service=<michelle state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.462] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:45.462] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:45.462] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<dataconfig state=<ServiceState.RUNNING: 10>>
[13:26:45.462] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:45.462] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<dogma_im state=<ServiceState.INITED: 3>>
[13:26:45.462] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<dogma_im state=<ServiceState.INITED: 3>> startup_deps=['effect_mgr', 'inventory_service', 'dogma_static']
[13:26:45.462] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<effect_mgr state=<ServiceState.INITED: 3>> startup_deps=['dogma_static']
[13:26:45.462] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<dogma_static state=<ServiceState.RUNNING: 10>>
[13:26:45.466] M [SCRIPT] [info     ] _start_finish [<Service effect_mgr>] service=<effect_mgr state=<ServiceState.STARTED: 7>>
[13:26:45.466] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<effect_mgr state=<ServiceState.STARTED: 7>> startup_deps=['dogma_static']
[13:26:45.466] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<inventory_service state=<ServiceState.RUNNING: 10>>
[13:26:45.466] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<dogma_static state=<ServiceState.RUNNING: 10>>
[13:26:45.466] M [SCRIPT] [info     ] _start_finish [<Service dogma_im>] service=<dogma_im state=<ServiceState.STARTED: 7>>
[13:26:45.466] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<dogma_im state=<ServiceState.STARTED: 7>> startup_deps=['effect_mgr', 'inventory_service', 'dogma_static']
[13:26:45.466] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['effect_mgr', 'inventory_service', 'dogma_static', 'godma', 'effect_buff_svc', 'target'] service=<dogma_im state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.467] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['dogma_static'] service=<effect_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.467] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<dogma_static state=<ServiceState.RUNNING: 10>>
[13:26:45.467] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13414a320> service=<effect_mgr state=<ServiceState.RUNNING: 10>>
[13:26:45.467] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<inventory_service state=<ServiceState.RUNNING: 10>>
[13:26:45.467] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<dogma_static state=<ServiceState.RUNNING: 10>>
[13:26:45.467] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:45.467] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<effect_buff_svc state=<ServiceState.INITED: 3>>
[13:26:45.467] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<effect_buff_svc state=<ServiceState.INITED: 3>> startup_deps=['dogma_im']
[13:26:45.467] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<dogma_im state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.478] M [SCRIPT] [info     ] _start_finish [<Service effect_buff_svc>] service=<effect_buff_svc state=<ServiceState.STARTED: 7>>
[13:26:45.478] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<effect_buff_svc state=<ServiceState.STARTED: 7>> startup_deps=['dogma_im']
[13:26:45.478] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['dogma_im'] service=<effect_buff_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.479] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<dogma_im state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.479] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1341498a0> service=<effect_buff_svc state=<ServiceState.RUNNING: 10>>
[13:26:45.479] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<target state=<ServiceState.INITED: 3>>
[13:26:45.479] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<target state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.479] M [SCRIPT] [info     ] _start_finish [<Service target>] service=<target state=<ServiceState.STARTED: 7>>
[13:26:45.479] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<target state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.479] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['michelle', 'godma', 'state_svc'] service=<target state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.479] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<michelle state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.479] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:45.479] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<state_svc state=<ServiceState.INITED: 3>>
[13:26:45.479] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<state_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.479] M [SCRIPT] [info     ] _start_finish [<Service state_svc>] service=<state_svc state=<ServiceState.STARTED: 7>>
[13:26:45.479] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<state_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.479] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<state_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.479] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1341789a0> service=<state_svc state=<ServiceState.RUNNING: 10>>
[13:26:45.479] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1341792e0> service=<target state=<ServiceState.RUNNING: 10>>
[13:26:45.480] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13412ef20> service=<dogma_im state=<ServiceState.RUNNING: 10>>
[13:26:45.480] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<buff state=<ServiceState.INITED: 3>>
[13:26:45.480] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<buff state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.480] M [SCRIPT] [info     ] _start_finish [<Service buff>] service=<buff state=<ServiceState.STARTED: 7>>
[13:26:45.480] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<buff state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.480] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<buff state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.480] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13412cfa0> service=<buff state=<ServiceState.RUNNING: 10>>
[13:26:45.480] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<drone state=<ServiceState.INITED: 3>>
[13:26:45.480] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<drone state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.480] M [SCRIPT] [info     ] _start_finish [<Service drone>] service=<drone state=<ServiceState.STARTED: 7>>
[13:26:45.480] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<drone state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.480] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<drone state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.480] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134148220> service=<drone state=<ServiceState.RUNNING: 10>>
[13:26:45.480] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134161b60> service=<michelle state=<ServiceState.RUNNING: 10>>
[13:26:45.481] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:45.481] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<target state=<ServiceState.RUNNING: 10>>
[13:26:45.481] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<drone_auto_fire state=<ServiceState.INITED: 3>>
[13:26:45.481] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<drone_auto_fire state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.481] M [SCRIPT] [info     ] _start_finish [<Service drone_auto_fire>] service=<drone_auto_fire state=<ServiceState.STARTED: 7>>
[13:26:45.481] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<drone_auto_fire state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.481] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['godma', 'target'] service=<drone_auto_fire state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.488] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:45.488] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<target state=<ServiceState.RUNNING: 10>>
[13:26:45.488] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134148fe0> service=<drone_auto_fire state=<ServiceState.RUNNING: 10>>
[13:26:45.488] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13414afe0> service=<equip_auto_fire state=<ServiceState.RUNNING: 10>>
[13:26:45.488] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13414bc60> service=<equip_svc state=<ServiceState.RUNNING: 10>>
[13:26:45.489] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x132da8b60> service=<game_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.489] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<game_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.490] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=forbid_login service=<forbid_login state=<ServiceState.STOPPED: 1>>
[13:26:45.490] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<forbid_login state=<ServiceState.INIT: 2>>
[13:26:45.490] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<forbid_login state=<ServiceState.INITED: 3>>
[13:26:45.490] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<forbid_login state=<ServiceState.INITED: 3>>
[13:26:45.490] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'forbid_login'} service=<forbid_login state=<ServiceState.INITED: 3>>
[13:26:45.490] M [SCRIPT] [info     ] service init success: <forbid_login state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.490] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<forbid_login state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.490] M [SCRIPT] [info     ] _start_finish [<Service forbid_login>] service=<forbid_login state=<ServiceState.STARTED: 7>>
[13:26:45.490] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<forbid_login state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.490] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<forbid_login state=<ServiceState.STARTED: 7>>
[13:26:45.491] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<forbid_login state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.491] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1251a4c60> service=<forbid_login state=<ServiceState.RUNNING: 10>>
[13:26:45.491] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<forbid_login state=<ServiceState.RUNNING: 10>>
[13:26:45.501] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=battle_pass_cli service=<battle_pass_cli state=<ServiceState.STOPPED: 1>>
[13:26:45.501] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<battle_pass_cli state=<ServiceState.INIT: 2>>
[13:26:45.501] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<battle_pass_cli state=<ServiceState.INITED: 3>>
[13:26:45.501] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<battle_pass_cli state=<ServiceState.INITED: 3>>
[13:26:45.501] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'battle_pass_cli'} service=<battle_pass_cli state=<ServiceState.INITED: 3>>
[13:26:45.501] M [SCRIPT] [info     ] service init success: <battle_pass_cli state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.501] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<battle_pass_cli state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.501] M [SCRIPT] [info     ] _start_finish [<Service battle_pass_cli>] service=<battle_pass_cli state=<ServiceState.STARTED: 7>>
[13:26:45.501] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<battle_pass_cli state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.501] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<battle_pass_cli state=<ServiceState.STARTED: 7>>
[13:26:45.501] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<battle_pass_cli state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.502] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1251a6f20> service=<battle_pass_cli state=<ServiceState.RUNNING: 10>>
[13:26:45.502] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<battle_pass_cli state=<ServiceState.RUNNING: 10>>
[13:26:45.504] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=bp_celebration_cli service=<bp_celebration_cli state=<ServiceState.STOPPED: 1>>
[13:26:45.504] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<bp_celebration_cli state=<ServiceState.INIT: 2>>
[13:26:45.504] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<bp_celebration_cli state=<ServiceState.INITED: 3>>
[13:26:45.504] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<bp_celebration_cli state=<ServiceState.INITED: 3>>
[13:26:45.504] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'bp_celebration_cli'} service=<bp_celebration_cli state=<ServiceState.INITED: 3>>
[13:26:45.504] M [SCRIPT] [info     ] service init success: <bp_celebration_cli state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.504] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<bp_celebration_cli state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.504] M [SCRIPT] [info     ] _start_finish [<Service bp_celebration_cli>] service=<bp_celebration_cli state=<ServiceState.STARTED: 7>>
[13:26:45.504] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<bp_celebration_cli state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.504] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<bp_celebration_cli state=<ServiceState.STARTED: 7>>
[13:26:45.504] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<bp_celebration_cli state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.505] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x134149860> service=<bp_celebration_cli state=<ServiceState.RUNNING: 10>>
[13:26:45.505] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<bp_celebration_cli state=<ServiceState.RUNNING: 10>>
[13:26:45.506] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_force service=<sigma_force state=<ServiceState.STOPPED: 1>>
[13:26:45.507] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_force state=<ServiceState.INIT: 2>>
[13:26:45.507] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_force state=<ServiceState.INITED: 3>>
[13:26:45.507] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_force state=<ServiceState.INITED: 3>>
[13:26:45.507] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_force'} service=<sigma_force state=<ServiceState.INITED: 3>>
[13:26:45.507] M [SCRIPT] [info     ] service init success: <sigma_force state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.507] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_force state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.507] M [SCRIPT] [info     ] _start_finish [<Service sigma_force>] service=<sigma_force state=<ServiceState.STARTED: 7>>
[13:26:45.507] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_force state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.507] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_force state=<ServiceState.STARTED: 7>>
[13:26:45.507] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_force state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.507] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1251bd3a0> service=<sigma_force state=<ServiceState.RUNNING: 10>>
[13:26:45.507] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_force state=<ServiceState.RUNNING: 10>>
[13:26:45.510] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_standing service=<sigma_standing state=<ServiceState.STOPPED: 1>>
[13:26:45.510] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_standing state=<ServiceState.INIT: 2>>
[13:26:45.510] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_standing state=<ServiceState.INITED: 3>>
[13:26:45.510] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_standing state=<ServiceState.INITED: 3>>
[13:26:45.510] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_standing'} service=<sigma_standing state=<ServiceState.INITED: 3>>
[13:26:45.510] M [SCRIPT] [info     ] service init success: <sigma_standing state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.510] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_standing state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.510] M [SCRIPT] [info     ] _start_finish [<Service sigma_standing>] service=<sigma_standing state=<ServiceState.STARTED: 7>>
[13:26:45.510] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_standing state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.510] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_standing state=<ServiceState.STARTED: 7>>
[13:26:45.510] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_standing state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.511] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1251be720> service=<sigma_standing state=<ServiceState.RUNNING: 10>>
[13:26:45.511] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_standing state=<ServiceState.RUNNING: 10>>
[13:26:45.511] M [SCRIPT] [info     ] start finish [Client]
[13:26:45.513] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=input service=<input state=<ServiceState.STOPPED: 1>>
[13:26:45.585] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=http_svc service=<http_svc state=<ServiceState.STOPPED: 1>>
[13:26:45.585] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<input state=<ServiceState.INIT: 2>>
[13:26:45.585] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<http_svc state=<ServiceState.INIT: 2>>
[13:26:45.585] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<input state=<ServiceState.INITED: 3>>
[13:26:45.585] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<input state=<ServiceState.INITED: 3>>
[13:26:45.585] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'view_manager', 'notifier_manager', 'data_recorder', 'tips_manager', 'ui_manager', 'p2log', 'localization', 'input'} service=<input state=<ServiceState.INITED: 3>>
[13:26:45.586] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<http_svc state=<ServiceState.INITED: 3>>
[13:26:45.586] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<http_svc state=<ServiceState.INITED: 3>>
[13:26:45.586] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'http_svc'} service=<http_svc state=<ServiceState.INITED: 3>>
[13:26:45.586] M [SCRIPT] [info     ] service init success: <input state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] service init success: <view_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] service init success: <notifier_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] service init success: <p2log state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] service init success: <ui_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] service init success: <data_recorder state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] service init success: <localization state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] service init success: <tips_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<input state=<ServiceState.INITED: 3>> startup_deps=['ui_manager']
[13:26:45.586] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<ui_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.586] M [SCRIPT] [info     ] service init success: <http_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.586] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<http_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.625] M [SCRIPT] [warning  ] [get_uiview_class][module=ui_new.touchpanel][miss UIView class] [ui_manager.utility]
[13:26:45.630] M [SCRIPT] [info     ] _start_finish [<Service input>] service=<input state=<ServiceState.STARTED: 7>>
[13:26:45.630] M [SCRIPT] [info     ] _start_finish [<Service http_svc>] service=<http_svc state=<ServiceState.STARTED: 7>>
[13:26:45.630] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<input state=<ServiceState.STARTED: 7>> startup_deps=['ui_manager']
[13:26:45.630] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<input state=<ServiceState.STARTED: 7>>
[13:26:45.630] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['ui_manager'] service=<input state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.630] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<ui_manager state=<ServiceState.RUNNING: 10>>
[13:26:45.630] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1375c2f20> service=<input state=<ServiceState.RUNNING: 10>>
[13:26:45.630] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<input state=<ServiceState.RUNNING: 10>>
[13:26:45.630] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<http_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:45.630] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<http_svc state=<ServiceState.STARTED: 7>>
[13:26:45.630] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<http_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:45.630] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1375ed420> service=<http_svc state=<ServiceState.RUNNING: 10>>
[13:26:45.630] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<http_svc state=<ServiceState.RUNNING: 10>>
[13:26:45.631] M [SCRIPT] ('drpf success', 0, 'Activation')
[13:26:45.631] M [SCRIPT] [info     ] [switch_on_boot][is_boot_login=True][play_cg=False] [<Service view_manager>]
[13:26:45.636] M [SCRIPT] [warning  ] [get_uiview_class][module=ui_new.login.bg][miss UIView class] [ui_manager.utility]
[13:26:45.682] M [COCOSUI] cocos load ttf : <gui_v1/fonts/shentoxcyr_regular.ttf>
[13:26:45.690] M [COCOSUI] cocos load ttf : <gui_v1/fonts/font_regular.ttf>
[13:26:45.715] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=version_manager service=<version_manager state=<ServiceState.STOPPED: 1>>
[13:26:45.715] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<version_manager state=<ServiceState.INIT: 2>>
[13:26:45.715] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<version_manager state=<ServiceState.INITED: 3>>
[13:26:45.715] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<version_manager state=<ServiceState.INITED: 3>>
[13:26:45.715] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'version_manager'} service=<version_manager state=<ServiceState.INITED: 3>>
[13:26:45.723] M [SCRIPT] [info     ] service init success: <version_manager state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:45.723] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<version_manager state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:45.724] M [SCRIPT] [info     ] [fetch_notice][start fetch notice thread] [<Service version_manager>]
[13:26:45.996] M [SCRIPT] [error    ] Failed to get JSON from https://controltower.g85naxx2gb.easebar.com/summary/5E596B43-9922-4AE2-A3AF-726F38B67B1F: Cannot connect to host controltower.g85naxx2gb.easebar.com:443 ssl:default [nodename nor servname provided, or not known] [<Service http_svc>]
[13:26:46.586]   [SCRIPT] [error    ] [invalid publish status line][b'g85naxx2gb@app_store 2.6.0 1 1 https://apps.apple.com/us/app/eve-echoes/id1446384690?mt=8'] [<Service version_manager>]
[13:26:46.587]   [SCRIPT] [error    ] [invalid publish status line][b'g85naxx2gb@google_play 2.6.0 1 1 https://play.google.com/store/apps/details?id=com.netease.eve.en'] [<Service version_manager>]
[13:26:46.587]   [SCRIPT] [error    ] [invalid publish status line][b'g85naxx2gb@app_store 2.6.1 1 1 https://apps.apple.com/us/app/eve-echoes/id1446384690?mt=8'] [<Service version_manager>]
[13:26:46.587]   [SCRIPT] [error    ] [invalid publish status line][b'g85naxx2gb@google_play 2.6.1 1 1 https://play.google.com/store/apps/details?id=com.netease.eve.en'] [<Service version_manager>]
[13:26:46.587]   [SCRIPT] [error    ] [invalid publish status line][b'g85naxx2gb@app_store 2.6.2 1 1 https://apps.apple.com/us/app/eve-echoes/id1446384690?mt=8'] [<Service version_manager>]
[13:26:46.587]   [SCRIPT] [error    ] [invalid publish status line][b'g85naxx2gb@google_play 2.6.2 1 1 https://play.google.com/store/apps/details?id=com.netease.eve.en'] [<Service version_manager>]
[13:26:46.604] M [SCRIPT] [warning  ] [get_uiview_class][module=ui_new.patch.main][miss UIView class] [ui_manager.utility]
[13:26:46.619] M [SCRIPT] ('[drpf][patch_server_connect_log]: ', {'type': 'PatchServerConnect', 'source': 'netease_p1', 'project': 'g85naxx2gb', 'engine_ver': '5.2.3', 'weak_udid': '53e5ce5cf67211ef84dcb5f6ad52f225', 'ip': '192.168.0.13', 'device_model': 'iPad13,9', 'os_name': 'ios', 'os_ver': '18.4.1', 'mac_addr': '', 'udid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F', 'app_channel': 'g85naxx2gb@app_store', 'app_ver': 1745410503, 'transid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F_1745519203876_238623164', 'unisdk_deviceid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F', 'sdk_ver': '3.3.3', 'network': 'wifi', 'country_code': 'US', 'device_width': '2732', 'device_height': '2048', 'account_id': '0@netease_global.win.163.com', 'old_accountid': '0@netease_global.win.163.com', 'connect_time ': 1.9073486328125e-06})
[13:26:46.619] M [SCRIPT] ('drpf success', 0, 'PatchServerConnect')
[13:26:46.736]   [SCRIPT] [INFO] - [detect start][scene_id=32]
[13:26:46.736]   [SCRIPT] DETECT Detector initialized.
[13:26:46.740]   [SCRIPT] DETECT debug log is closing
[13:26:46.740]   [SCRIPT] [INFO] - [detect end][scene_id=32]
[13:26:46.741] M [SCRIPT] ('drpf success', 0, 'CheckUpdate')
[13:26:46.786] M [SCRIPT] [info     ] _start_finish [<Service version_manager>] service=<version_manager state=<ServiceState.STARTED: 7>>
[13:26:46.786] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<version_manager state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.786] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<version_manager state=<ServiceState.STARTED: 7>>
[13:26:46.786] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<version_manager state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.786] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13b8ed960> service=<version_manager state=<ServiceState.RUNNING: 10>>
[13:26:46.786] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<version_manager state=<ServiceState.RUNNING: 10>>
[13:26:46.790] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=audio_manager service=<audio_manager state=<ServiceState.STOPPED: 1>>
[13:26:46.791] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<audio_manager state=<ServiceState.INIT: 2>>
[13:26:46.791] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<audio_manager state=<ServiceState.INITED: 3>>
[13:26:46.791] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<audio_manager state=<ServiceState.INITED: 3>>
[13:26:46.792] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'setting', 'audio_manager', 'novice', 'localization'} service=<audio_manager state=<ServiceState.INITED: 3>>
[13:26:46.792] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=novice service=<novice state=<ServiceState.STOPPED: 1>>
[13:26:46.792] M [SCRIPT] [info     ] service init success: <setting state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.792] M [SCRIPT] [info     ] service init success: <audio_manager state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.792] M [SCRIPT] [info     ] service init success: <localization state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.792] M [SCRIPT] [info     ] service init success: <novice state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.792] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<audio_manager state=<ServiceState.INITED: 3>> startup_deps=['setting', 'novice']
[13:26:46.793] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<setting state=<ServiceState.RUNNING: 10>>
[13:26:46.793] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<novice state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.793] M [SCRIPT] [info     ] _start_finish [<Service novice>] service=<novice state=<ServiceState.STARTED: 7>>
[13:26:46.793] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<novice state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.794] M [AUDIO] -----Load wwise\init.bnk succeed!
[13:26:46.795] M [AUDIO] -----Load wwise\music_eve.bnk succeed!
[13:26:46.797] M [AUDIO] -----Load wwise\cosmos.bnk succeed!
[13:26:46.799] M [AUDIO] -----Load wwise\ship_modules_v1.bnk succeed!
[13:26:46.800] M [AUDIO] -----Load wwise\music_s1.bnk succeed!
[13:26:46.801] M [AUDIO] -----Load wwise\saiji_amb.bnk succeed!
[13:26:46.803] M [AUDIO] -----Load wwise\saiji_obj.bnk succeed!
[13:26:46.804] M [AUDIO] -----Load wwise\saiji_ship.bnk succeed!
[13:26:46.805] M [AUDIO] -----Load wwise\saiji_wpn.bnk succeed!
[13:26:46.819] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=reward_login_mgr service=<reward_login_mgr state=<ServiceState.STOPPED: 1>>
[13:26:46.819] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<reward_login_mgr state=<ServiceState.INIT: 2>>
[13:26:46.819] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<reward_login_mgr state=<ServiceState.INITED: 3>>
[13:26:46.819] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<reward_login_mgr state=<ServiceState.INITED: 3>>
[13:26:46.819] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'reward_login_mgr'} service=<reward_login_mgr state=<ServiceState.INITED: 3>>
[13:26:46.819] M [SCRIPT] [info     ] service init success: <reward_login_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.819] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<reward_login_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.819] M [SCRIPT] [info     ] _start_finish [<Service reward_login_mgr>] service=<reward_login_mgr state=<ServiceState.STARTED: 7>>
[13:26:46.819] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<reward_login_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.819] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<reward_login_mgr state=<ServiceState.STARTED: 7>>
[13:26:46.819] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<reward_login_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.819] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x132f3abe0> service=<reward_login_mgr state=<ServiceState.RUNNING: 10>>
[13:26:46.819] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<reward_login_mgr state=<ServiceState.RUNNING: 10>>
[13:26:46.945] M [SCRIPT] [info     ] _start_finish [<Service audio_manager>] service=<audio_manager state=<ServiceState.STARTED: 7>>
[13:26:46.945] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<audio_manager state=<ServiceState.STARTED: 7>> startup_deps=['setting', 'novice']
[13:26:46.946] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<audio_manager state=<ServiceState.STARTED: 7>>
[13:26:46.946] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['setting', 'novice'] service=<audio_manager state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.946] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<setting state=<ServiceState.RUNNING: 10>>
[13:26:46.946] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<novice state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.946] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13e8d7660> service=<novice state=<ServiceState.RUNNING: 10>>
[13:26:46.946] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13e8d6fe0> service=<audio_manager state=<ServiceState.RUNNING: 10>>
[13:26:46.946] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<audio_manager state=<ServiceState.RUNNING: 10>>
[13:26:46.947] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=avatar service=<avatar state=<ServiceState.STOPPED: 1>>
[13:26:46.947] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<avatar state=<ServiceState.INIT: 2>>
[13:26:46.947] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<avatar state=<ServiceState.INITED: 3>>
[13:26:46.948] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<avatar state=<ServiceState.INITED: 3>>
[13:26:46.948] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'avatar'} service=<avatar state=<ServiceState.INITED: 3>>
[13:26:46.948] M [SCRIPT] [info     ] service init success: <avatar state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.948] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<avatar state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.948] M [SCRIPT] [info     ] _start_finish [<Service avatar>] service=<avatar state=<ServiceState.STARTED: 7>>
[13:26:46.948] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<avatar state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.948] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<avatar state=<ServiceState.STARTED: 7>>
[13:26:46.948] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<avatar state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.948] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1322f0aa0> service=<avatar state=<ServiceState.RUNNING: 10>>
[13:26:46.948] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<avatar state=<ServiceState.RUNNING: 10>>
[13:26:46.950] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=starmap service=<starmap state=<ServiceState.STOPPED: 1>>
[13:26:46.950] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<starmap state=<ServiceState.INIT: 2>>
[13:26:46.950] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<starmap state=<ServiceState.INITED: 3>>
[13:26:46.950] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<starmap state=<ServiceState.INITED: 3>>
[13:26:46.950] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'starmap'} service=<starmap state=<ServiceState.INITED: 3>>
[13:26:46.950] M [SCRIPT] [info     ] service init success: <starmap state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.950] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<starmap state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.950] M [SCRIPT] [info     ] _start_finish [<Service starmap>] service=<starmap state=<ServiceState.STARTED: 7>>
[13:26:46.951] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<starmap state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.951] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<starmap state=<ServiceState.STARTED: 7>>
[13:26:46.951] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<starmap state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.951] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13eb18ce0> service=<starmap state=<ServiceState.RUNNING: 10>>
[13:26:46.951] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<starmap state=<ServiceState.RUNNING: 10>>
[13:26:46.963] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_starmap service=<sigma_starmap state=<ServiceState.STOPPED: 1>>
[13:26:46.963] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_starmap state=<ServiceState.INIT: 2>>
[13:26:46.963] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_starmap state=<ServiceState.INITED: 3>>
[13:26:46.963] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_starmap state=<ServiceState.INITED: 3>>
[13:26:46.963] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_starmap'} service=<sigma_starmap state=<ServiceState.INITED: 3>>
[13:26:46.963] M [SCRIPT] [info     ] service init success: <sigma_starmap state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.963] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_starmap state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.963] M [SCRIPT] [info     ] _start_finish [<Service sigma_starmap>] service=<sigma_starmap state=<ServiceState.STARTED: 7>>
[13:26:46.963] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_starmap state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.963] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_starmap state=<ServiceState.STARTED: 7>>
[13:26:46.964] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_starmap state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.964] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ebc60a0> service=<sigma_starmap state=<ServiceState.RUNNING: 10>>
[13:26:46.964] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_starmap state=<ServiceState.RUNNING: 10>>
[13:26:46.965] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_transfer service=<sigma_transfer state=<ServiceState.STOPPED: 1>>
[13:26:46.965] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_transfer state=<ServiceState.INIT: 2>>
[13:26:46.965] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_transfer state=<ServiceState.INITED: 3>>
[13:26:46.965] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_transfer state=<ServiceState.INITED: 3>>
[13:26:46.965] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_transfer'} service=<sigma_transfer state=<ServiceState.INITED: 3>>
[13:26:46.965] M [SCRIPT] [info     ] service init success: <sigma_transfer state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.965] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_transfer state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.966] M [SCRIPT] [info     ] _start_finish [<Service sigma_transfer>] service=<sigma_transfer state=<ServiceState.STARTED: 7>>
[13:26:46.966] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_transfer state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.966] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_transfer state=<ServiceState.STARTED: 7>>
[13:26:46.966] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_transfer state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.966] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ebc7460> service=<sigma_transfer state=<ServiceState.RUNNING: 10>>
[13:26:46.966] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_transfer state=<ServiceState.RUNNING: 10>>
[13:26:46.968] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_empire_wars service=<sigma_empire_wars state=<ServiceState.STOPPED: 1>>
[13:26:46.968] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_empire_wars state=<ServiceState.INIT: 2>>
[13:26:46.968] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_empire_wars state=<ServiceState.INITED: 3>>
[13:26:46.968] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_empire_wars state=<ServiceState.INITED: 3>>
[13:26:46.968] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_empire_wars'} service=<sigma_empire_wars state=<ServiceState.INITED: 3>>
[13:26:46.968] M [SCRIPT] [info     ] service init success: <sigma_empire_wars state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.968] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_empire_wars state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.971] M [SCRIPT] [info     ] _start_finish [<Service sigma_empire_wars>] service=<sigma_empire_wars state=<ServiceState.STARTED: 7>>
[13:26:46.971] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_empire_wars state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.971] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_empire_wars state=<ServiceState.STARTED: 7>>
[13:26:46.971] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_empire_wars state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.971] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ebc7fe0> service=<sigma_empire_wars state=<ServiceState.RUNNING: 10>>
[13:26:46.971] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_empire_wars state=<ServiceState.RUNNING: 10>>
[13:26:46.974] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=wallet service=<wallet state=<ServiceState.STOPPED: 1>>
[13:26:46.974] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<wallet state=<ServiceState.INIT: 2>>
[13:26:46.974] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<wallet state=<ServiceState.INITED: 3>>
[13:26:46.974] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<wallet state=<ServiceState.INITED: 3>>
[13:26:46.976] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'jelly_mgr', 'macho_net', 'network', 'wallet'} service=<wallet state=<ServiceState.INITED: 3>>
[13:26:46.976] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=jelly_mgr service=<jelly_mgr state=<ServiceState.STOPPED: 1>>
[13:26:46.976] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.976] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.976] M [SCRIPT] [info     ] service init success: <wallet state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.976] M [SCRIPT] [info     ] service init success: <jelly_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.976] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<wallet state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.977] M [SCRIPT] [info     ] _start_finish [<Service wallet>] service=<wallet state=<ServiceState.STARTED: 7>>
[13:26:46.977] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<wallet state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.977] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<wallet state=<ServiceState.STARTED: 7>>
[13:26:46.977] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net', 'jelly_mgr'] service=<wallet state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.977] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:46.977] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<jelly_mgr state=<ServiceState.INITED: 3>>
[13:26:46.977] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<jelly_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.977] M [SCRIPT] [info     ] _start_finish [<Service jelly_mgr>] service=<jelly_mgr state=<ServiceState.STARTED: 7>>
[13:26:46.977] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<jelly_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.977] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<jelly_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.977] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ebfea20> service=<jelly_mgr state=<ServiceState.RUNNING: 10>>
[13:26:46.977] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ebfdce0> service=<wallet state=<ServiceState.RUNNING: 10>>
[13:26:46.977] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<wallet state=<ServiceState.RUNNING: 10>>
[13:26:46.978] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=hub_wallet service=<hub_wallet state=<ServiceState.STOPPED: 1>>
[13:26:46.979] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<hub_wallet state=<ServiceState.INIT: 2>>
[13:26:46.979] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<hub_wallet state=<ServiceState.INITED: 3>>
[13:26:46.979] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<hub_wallet state=<ServiceState.INITED: 3>>
[13:26:46.979] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'hub_wallet'} service=<hub_wallet state=<ServiceState.INITED: 3>>
[13:26:46.979] M [SCRIPT] [info     ] service init success: <hub_wallet state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.979] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<hub_wallet state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.979] M [SCRIPT] [info     ] _start_finish [<Service hub_wallet>] service=<hub_wallet state=<ServiceState.STARTED: 7>>
[13:26:46.979] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<hub_wallet state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.979] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<hub_wallet state=<ServiceState.STARTED: 7>>
[13:26:46.979] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<hub_wallet state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.979] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ebffd60> service=<hub_wallet state=<ServiceState.RUNNING: 10>>
[13:26:46.979] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<hub_wallet state=<ServiceState.RUNNING: 10>>
[13:26:46.982] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=private_chat_service service=<private_chat_service state=<ServiceState.STOPPED: 1>>
[13:26:46.982] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<private_chat_service state=<ServiceState.INIT: 2>>
[13:26:46.982] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<private_chat_service state=<ServiceState.INITED: 3>>
[13:26:46.982] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<private_chat_service state=<ServiceState.INITED: 3>>
[13:26:46.982] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'private_chat_service'} service=<private_chat_service state=<ServiceState.INITED: 3>>
[13:26:46.983] M [SCRIPT] [info     ] service init success: <private_chat_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.983] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<private_chat_service state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.983] M [SCRIPT] [info     ] _start_finish [<Service private_chat_service>] service=<private_chat_service state=<ServiceState.STARTED: 7>>
[13:26:46.983] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<private_chat_service state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.983] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<private_chat_service state=<ServiceState.STARTED: 7>>
[13:26:46.983] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<private_chat_service state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.983] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f450ce0> service=<private_chat_service state=<ServiceState.RUNNING: 10>>
[13:26:46.983] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<private_chat_service state=<ServiceState.RUNNING: 10>>
[13:26:46.986] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=mail_mgr service=<mail_mgr state=<ServiceState.STOPPED: 1>>
[13:26:46.986] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<mail_mgr state=<ServiceState.INIT: 2>>
[13:26:46.987] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<mail_mgr state=<ServiceState.INITED: 3>>
[13:26:46.987] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<mail_mgr state=<ServiceState.INITED: 3>>
[13:26:46.987] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'mail_mgr', 'network', 'macho_net'} service=<mail_mgr state=<ServiceState.INITED: 3>>
[13:26:46.987] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.987] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.987] M [SCRIPT] [info     ] service init success: <mail_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.987] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<mail_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.987] M [SCRIPT] [info     ] _start_finish [<Service mail_mgr>] service=<mail_mgr state=<ServiceState.STARTED: 7>>
[13:26:46.987] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<mail_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.987] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<mail_mgr state=<ServiceState.STARTED: 7>>
[13:26:46.987] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net'] service=<mail_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.987] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:46.988] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f4520e0> service=<mail_mgr state=<ServiceState.RUNNING: 10>>
[13:26:46.988] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<mail_mgr state=<ServiceState.RUNNING: 10>>
[13:26:46.989] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=offline_handle service=<offline_handle state=<ServiceState.STOPPED: 1>>
[13:26:46.989] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<offline_handle state=<ServiceState.INIT: 2>>
[13:26:46.989] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<offline_handle state=<ServiceState.INITED: 3>>
[13:26:46.989] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<offline_handle state=<ServiceState.INITED: 3>>
[13:26:46.989] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'offline_handle', 'macho_net', 'network'} service=<offline_handle state=<ServiceState.INITED: 3>>
[13:26:46.989] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.989] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:46.989] M [SCRIPT] [info     ] service init success: <offline_handle state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:46.989] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<offline_handle state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:46.989] M [SCRIPT] [info     ] _start_finish [<Service offline_handle>] service=<offline_handle state=<ServiceState.STARTED: 7>>
[13:26:46.990] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<offline_handle state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:46.990] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<offline_handle state=<ServiceState.STARTED: 7>>
[13:26:46.990] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net'] service=<offline_handle state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:46.990] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:46.990] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f452fe0> service=<offline_handle state=<ServiceState.RUNNING: 10>>
[13:26:46.990] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<offline_handle state=<ServiceState.RUNNING: 10>>
[13:26:47.003] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=task service=<task state=<ServiceState.STOPPED: 1>>
[13:26:47.003] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<task state=<ServiceState.INIT: 2>>
[13:26:47.004] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<task state=<ServiceState.INITED: 3>>
[13:26:47.004] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<task state=<ServiceState.INITED: 3>>
[13:26:47.004] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'network', 'task'} service=<task state=<ServiceState.INITED: 3>>
[13:26:47.004] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.004] M [SCRIPT] [info     ] service init success: <task state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.004] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.004] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<task state=<ServiceState.INITED: 3>> startup_deps=['macho_net']
[13:26:47.004] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.004] M [SCRIPT] [info     ] _start_finish [<Service task>] service=<task state=<ServiceState.STARTED: 7>>
[13:26:47.004] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<task state=<ServiceState.STARTED: 7>> startup_deps=['macho_net']
[13:26:47.004] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<task state=<ServiceState.STARTED: 7>>
[13:26:47.004] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net'] service=<task state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.004] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.005] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f4c3020> service=<task state=<ServiceState.RUNNING: 10>>
[13:26:47.005] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<task state=<ServiceState.RUNNING: 10>>
[13:26:47.006] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=novice_task service=<novice_task state=<ServiceState.STOPPED: 1>>
[13:26:47.006] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<novice_task state=<ServiceState.INIT: 2>>
[13:26:47.006] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<novice_task state=<ServiceState.INITED: 3>>
[13:26:47.006] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<novice_task state=<ServiceState.INITED: 3>>
[13:26:47.006] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'network', 'novice_task', 'task'} service=<novice_task state=<ServiceState.INITED: 3>>
[13:26:47.006] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.006] M [SCRIPT] [info     ] service init success: <task state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.006] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.006] M [SCRIPT] [info     ] service init success: <novice_task state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.006] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<novice_task state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.007] M [SCRIPT] [info     ] _start_finish [<Service novice_task>] service=<novice_task state=<ServiceState.STARTED: 7>>
[13:26:47.007] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<novice_task state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.007] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<novice_task state=<ServiceState.STARTED: 7>>
[13:26:47.007] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['task'] service=<novice_task state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.007] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<task state=<ServiceState.RUNNING: 10>>
[13:26:47.007] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f529620> service=<novice_task state=<ServiceState.RUNNING: 10>>
[13:26:47.007] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<novice_task state=<ServiceState.RUNNING: 10>>
[13:26:47.013] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=corp_svc service=<corp_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.013] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<corp_svc state=<ServiceState.INIT: 2>>
[13:26:47.014] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<corp_svc state=<ServiceState.INITED: 3>>
[13:26:47.014] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<corp_svc state=<ServiceState.INITED: 3>>
[13:26:47.014] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'corp_svc'} service=<corp_svc state=<ServiceState.INITED: 3>>
[13:26:47.014] M [SCRIPT] [info     ] service init success: <corp_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.014] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<corp_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.014] M [SCRIPT] [info     ] _start_finish [<Service corp_svc>] service=<corp_svc state=<ServiceState.STARTED: 7>>
[13:26:47.014] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<corp_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.014] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<corp_svc state=<ServiceState.STARTED: 7>>
[13:26:47.014] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<corp_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.014] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f52bea0> service=<corp_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.014] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<corp_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.032] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=corp_task service=<corp_task state=<ServiceState.STOPPED: 1>>
[13:26:47.032] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<corp_task state=<ServiceState.INIT: 2>>
[13:26:47.032] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<corp_task state=<ServiceState.INITED: 3>>
[13:26:47.032] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<corp_task state=<ServiceState.INITED: 3>>
[13:26:47.032] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'network', 'corp_task'} service=<corp_task state=<ServiceState.INITED: 3>>
[13:26:47.033] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.033] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.033] M [SCRIPT] [info     ] service init success: <corp_task state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.033] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<corp_task state=<ServiceState.INITED: 3>> startup_deps=['macho_net']
[13:26:47.033] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.033] M [SCRIPT] [info     ] _start_finish [<Service corp_task>] service=<corp_task state=<ServiceState.STARTED: 7>>
[13:26:47.033] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<corp_task state=<ServiceState.STARTED: 7>> startup_deps=['macho_net']
[13:26:47.033] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<corp_task state=<ServiceState.STARTED: 7>>
[13:26:47.033] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net'] service=<corp_task state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.033] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.034] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f5de2e0> service=<corp_task state=<ServiceState.RUNNING: 10>>
[13:26:47.034] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<corp_task state=<ServiceState.RUNNING: 10>>
[13:26:47.052] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=corp_battle service=<corp_battle state=<ServiceState.STOPPED: 1>>
[13:26:47.052] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<corp_battle state=<ServiceState.INIT: 2>>
[13:26:47.053] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<corp_battle state=<ServiceState.INITED: 3>>
[13:26:47.053] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<corp_battle state=<ServiceState.INITED: 3>>
[13:26:47.079] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'corp_battle', 'equip_sync_svc', 'network'} service=<corp_battle state=<ServiceState.INITED: 3>>
[13:26:47.079] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=equip_sync_svc service=<equip_sync_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.079] M [SCRIPT] [info     ] service init success: <corp_battle state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.079] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.079] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.080] M [SCRIPT] [info     ] service init success: <equip_sync_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.080] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<corp_battle state=<ServiceState.INITED: 3>> startup_deps=['macho_net']
[13:26:47.080] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.080] M [SCRIPT] [info     ] _start_finish [<Service corp_battle>] service=<corp_battle state=<ServiceState.STARTED: 7>>
[13:26:47.080] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<corp_battle state=<ServiceState.STARTED: 7>> startup_deps=['macho_net']
[13:26:47.080] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<corp_battle state=<ServiceState.STARTED: 7>>
[13:26:47.080] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net', 'equip_sync_svc'] service=<corp_battle state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.080] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.080] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<equip_sync_svc state=<ServiceState.INITED: 3>>
[13:26:47.080] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<equip_sync_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.080] M [SCRIPT] [info     ] _start_finish [<Service equip_sync_svc>] service=<equip_sync_svc state=<ServiceState.STARTED: 7>>
[13:26:47.080] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<equip_sync_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.080] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<equip_sync_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.080] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f7b5f20> service=<equip_sync_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.081] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f68cca0> service=<corp_battle state=<ServiceState.RUNNING: 10>>
[13:26:47.081] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<corp_battle state=<ServiceState.RUNNING: 10>>
[13:26:47.083] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=contact_service service=<contact_service state=<ServiceState.STOPPED: 1>>
[13:26:47.084] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<contact_service state=<ServiceState.INIT: 2>>
[13:26:47.084] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<contact_service state=<ServiceState.INITED: 3>>
[13:26:47.084] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<contact_service state=<ServiceState.INITED: 3>>
[13:26:47.084] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'contact_service', 'corp_svc'} service=<contact_service state=<ServiceState.INITED: 3>>
[13:26:47.084] M [SCRIPT] [info     ] service init success: <corp_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.084] M [SCRIPT] [info     ] service init success: <contact_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.084] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<contact_service state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.084] M [SCRIPT] [info     ] _start_finish [<Service contact_service>] service=<contact_service state=<ServiceState.STARTED: 7>>
[13:26:47.084] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<contact_service state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.084] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<contact_service state=<ServiceState.STARTED: 7>>
[13:26:47.084] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['corp_svc'] service=<contact_service state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.084] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<corp_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.084] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f7b7660> service=<contact_service state=<ServiceState.RUNNING: 10>>
[13:26:47.084] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<contact_service state=<ServiceState.RUNNING: 10>>
[13:26:47.096] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=fleet4 service=<fleet4 state=<ServiceState.STOPPED: 1>>
[13:26:47.096] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<fleet4 state=<ServiceState.INIT: 2>>
[13:26:47.097] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<fleet4 state=<ServiceState.INITED: 3>>
[13:26:47.097] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<fleet4 state=<ServiceState.INITED: 3>>
[13:26:47.097] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'fleet4'} service=<fleet4 state=<ServiceState.INITED: 3>>
[13:26:47.097] M [SCRIPT] [info     ] service init success: <fleet4 state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.097] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<fleet4 state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.097] M [SCRIPT] [info     ] _start_finish [<Service fleet4>] service=<fleet4 state=<ServiceState.STARTED: 7>>
[13:26:47.097] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<fleet4 state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.097] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<fleet4 state=<ServiceState.STARTED: 7>>
[13:26:47.097] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<fleet4 state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.098] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f88a260> service=<fleet4 state=<ServiceState.RUNNING: 10>>
[13:26:47.098] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<fleet4 state=<ServiceState.RUNNING: 10>>
[13:26:47.107] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=police2 service=<police2 state=<ServiceState.STOPPED: 1>>
[13:26:47.107] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<police2 state=<ServiceState.INIT: 2>>
[13:26:47.107] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<police2 state=<ServiceState.INITED: 3>>
[13:26:47.107] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<police2 state=<ServiceState.INITED: 3>>
[13:26:47.107] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'police2', 'dataconfig', 'dogma_static'} service=<police2 state=<ServiceState.INITED: 3>>
[13:26:47.107] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.107] M [SCRIPT] [info     ] service init success: <police2 state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.107] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.107] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<police2 state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.107] M [SCRIPT] [info     ] _start_finish [<Service police2>] service=<police2 state=<ServiceState.STARTED: 7>>
[13:26:47.107] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<police2 state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.107] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<police2 state=<ServiceState.STARTED: 7>>
[13:26:47.108] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['dogma_static'] service=<police2 state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.108] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<dogma_static state=<ServiceState.RUNNING: 10>>
[13:26:47.108] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f88b860> service=<police2 state=<ServiceState.RUNNING: 10>>
[13:26:47.108] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<police2 state=<ServiceState.RUNNING: 10>>
[13:26:47.109] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=cynosural service=<cynosural state=<ServiceState.STOPPED: 1>>
[13:26:47.109] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<cynosural state=<ServiceState.INIT: 2>>
[13:26:47.109] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<cynosural state=<ServiceState.INITED: 3>>
[13:26:47.109] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<cynosural state=<ServiceState.INITED: 3>>
[13:26:47.109] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'state_svc', 'cynosural', 'dataconfig', 'dogma_static', 'michelle', 'dogma_im', 'buff', 'drone', 'network', 'godma', 'target', 'effect_buff_svc', 'inventory_service', 'effect_mgr', 'fx_sequencer'} service=<cynosural state=<ServiceState.INITED: 3>>
[13:26:47.110] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=fx_sequencer service=<fx_sequencer state=<ServiceState.STOPPED: 1>>
[13:26:47.110] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <cynosural state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.110] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.111] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.111] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.111] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.111] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.111] M [SCRIPT] [info     ] service init success: <fx_sequencer state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.111] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<cynosural state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.111] M [SCRIPT] [info     ] _start_finish [<Service cynosural>] service=<cynosural state=<ServiceState.STARTED: 7>>
[13:26:47.111] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<cynosural state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.111] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<cynosural state=<ServiceState.STARTED: 7>>
[13:26:47.111] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['fx_sequencer', 'godma'] service=<cynosural state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.111] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<fx_sequencer state=<ServiceState.INITED: 3>>
[13:26:47.111] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<fx_sequencer state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.111] M [SCRIPT] [info     ] _start_finish [<Service fx_sequencer>] service=<fx_sequencer state=<ServiceState.STARTED: 7>>
[13:26:47.112] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<fx_sequencer state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.112] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['michelle'] service=<fx_sequencer state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.112] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<michelle state=<ServiceState.RUNNING: 10>>
[13:26:47.112] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f8e1c20> service=<fx_sequencer state=<ServiceState.RUNNING: 10>>
[13:26:47.112] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:47.112] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f8e1020> service=<cynosural state=<ServiceState.RUNNING: 10>>
[13:26:47.112] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<cynosural state=<ServiceState.RUNNING: 10>>
[13:26:47.118] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=autopilot2 service=<autopilot2 state=<ServiceState.STOPPED: 1>>
[13:26:47.118] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<autopilot2 state=<ServiceState.INIT: 2>>
[13:26:47.118] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<autopilot2 state=<ServiceState.INITED: 3>>
[13:26:47.118] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<autopilot2 state=<ServiceState.INITED: 3>>
[13:26:47.123] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'path_finder', 'starmap', 'dataconfig', 'autopilot2'} service=<autopilot2 state=<ServiceState.INITED: 3>>
[13:26:47.124] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=path_finder service=<path_finder state=<ServiceState.STOPPED: 1>>
[13:26:47.124] M [SCRIPT] [info     ] service init success: <starmap state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.124] M [SCRIPT] [info     ] service init success: <autopilot2 state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.124] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.124] M [SCRIPT] [info     ] service init success: <path_finder state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.124] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<autopilot2 state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.125] M [SCRIPT] [info     ] _start_finish [<Service autopilot2>] service=<autopilot2 state=<ServiceState.STARTED: 7>>
[13:26:47.125] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<autopilot2 state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.125] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<autopilot2 state=<ServiceState.STARTED: 7>>
[13:26:47.125] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['path_finder', 'starmap'] service=<autopilot2 state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.125] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<path_finder state=<ServiceState.INITED: 3>>
[13:26:47.126] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<path_finder state=<ServiceState.INITED: 3>> startup_deps=['dataconfig']
[13:26:47.126] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<dataconfig state=<ServiceState.RUNNING: 10>>
[13:26:47.126] M [SCRIPT] [info     ] Initializing the pathfinding internals [<Service path_finder>]
[13:26:47.368] M [SCRIPT] [info     ] [path_finder][create_path_finder][system_cnt=20150] [path_finder]
[13:26:47.369] M [SCRIPT] [info     ] _start_finish [<Service path_finder>] service=<path_finder state=<ServiceState.STARTED: 7>>
[13:26:47.369] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<path_finder state=<ServiceState.STARTED: 7>> startup_deps=['dataconfig']
[13:26:47.369] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['dataconfig'] service=<path_finder state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.369] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<dataconfig state=<ServiceState.RUNNING: 10>>
[13:26:47.369] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f9335e0> service=<path_finder state=<ServiceState.RUNNING: 10>>
[13:26:47.369] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<starmap state=<ServiceState.RUNNING: 10>>
[13:26:47.369] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13f930da0> service=<autopilot2 state=<ServiceState.RUNNING: 10>>
[13:26:47.369] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<autopilot2 state=<ServiceState.RUNNING: 10>>
[13:26:47.371] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=dungeon2 service=<dungeon2 state=<ServiceState.STOPPED: 1>>
[13:26:47.371] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<dungeon2 state=<ServiceState.INIT: 2>>
[13:26:47.371] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<dungeon2 state=<ServiceState.INITED: 3>>
[13:26:47.371] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<dungeon2 state=<ServiceState.INITED: 3>>
[13:26:47.371] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'equip_svc', 'equip_auto_fire', 'state_svc', 'dataconfig', 'dogma_static', 'michelle', 'dungeon2', 'drone_auto_fire', 'target', 'dogma_im', 'buff', 'godma', 'drone', 'network', 'effect_buff_svc', 'inventory_service', 'effect_mgr'} service=<dungeon2 state=<ServiceState.INITED: 3>>
[13:26:47.372] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <dungeon2 state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <DroneAutoFire combat_future:None > [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <equip_auto_fire state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.372] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.373] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.373] M [SCRIPT] [info     ] service init success: <equip_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.373] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.373] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.373] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<dungeon2 state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.373] M [SCRIPT] [info     ] _start_finish [<Service dungeon2>] service=<dungeon2 state=<ServiceState.STARTED: 7>>
[13:26:47.373] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<dungeon2 state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.373] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<dungeon2 state=<ServiceState.STARTED: 7>>
[13:26:47.373] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['equip_svc', 'godma', 'michelle', 'target'] service=<dungeon2 state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.373] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<equip_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.373] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:47.373] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<michelle state=<ServiceState.RUNNING: 10>>
[13:26:47.373] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<target state=<ServiceState.RUNNING: 10>>
[13:26:47.373] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fc42d20> service=<dungeon2 state=<ServiceState.RUNNING: 10>>
[13:26:47.373] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<dungeon2 state=<ServiceState.RUNNING: 10>>
[13:26:47.375] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=scene_svc service=<scene_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.375] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<scene_svc state=<ServiceState.INIT: 2>>
[13:26:47.375] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<scene_svc state=<ServiceState.INITED: 3>>
[13:26:47.375] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<scene_svc state=<ServiceState.INITED: 3>>
[13:26:47.375] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'scene_svc'} service=<scene_svc state=<ServiceState.INITED: 3>>
[13:26:47.376] M [SCRIPT] [info     ] service init success: <scene_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.376] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<scene_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.376] M [SCRIPT] [info     ] _start_finish [<Service scene_svc>] service=<scene_svc state=<ServiceState.STARTED: 7>>
[13:26:47.376] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<scene_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.376] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<scene_svc state=<ServiceState.STARTED: 7>>
[13:26:47.376] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<scene_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.376] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fc78420> service=<scene_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.376] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<scene_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.378] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=tactical2_svc service=<tactical2_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.378] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<tactical2_svc state=<ServiceState.INIT: 2>>
[13:26:47.378] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<tactical2_svc state=<ServiceState.INITED: 3>>
[13:26:47.378] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<tactical2_svc state=<ServiceState.INITED: 3>>
[13:26:47.378] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'tactical2_svc'} service=<tactical2_svc state=<ServiceState.INITED: 3>>
[13:26:47.378] M [SCRIPT] [info     ] service init success: <tactical2_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.378] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<tactical2_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.380] M [SCRIPT] [info     ] _start_finish [<Service tactical2_svc>] service=<tactical2_svc state=<ServiceState.STARTED: 7>>
[13:26:47.381] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<tactical2_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.381] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<tactical2_svc state=<ServiceState.STARTED: 7>>
[13:26:47.381] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<tactical2_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.381] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fc79760> service=<tactical2_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.381] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<tactical2_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.382] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=circle_progress_svc service=<circle_progress_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.383] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<circle_progress_svc state=<ServiceState.INIT: 2>>
[13:26:47.383] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<circle_progress_svc state=<ServiceState.INITED: 3>>
[13:26:47.383] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<circle_progress_svc state=<ServiceState.INITED: 3>>
[13:26:47.383] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'circle_progress_svc'} service=<circle_progress_svc state=<ServiceState.INITED: 3>>
[13:26:47.383] M [SCRIPT] [info     ] service init success: <circle_progress_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.383] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<circle_progress_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.385] M [SCRIPT] [info     ] _start_finish [<Service circle_progress_svc>] service=<circle_progress_svc state=<ServiceState.STARTED: 7>>
[13:26:47.385] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<circle_progress_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.385] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<circle_progress_svc state=<ServiceState.STARTED: 7>>
[13:26:47.385] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<circle_progress_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.385] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fc7ab60> service=<circle_progress_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.385] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<circle_progress_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.386] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sandbox service=<sandbox state=<ServiceState.STOPPED: 1>>
[13:26:47.386] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sandbox state=<ServiceState.INIT: 2>>
[13:26:47.386] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sandbox state=<ServiceState.INITED: 3>>
[13:26:47.387] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sandbox state=<ServiceState.INITED: 3>>
[13:26:47.387] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sandbox'} service=<sandbox state=<ServiceState.INITED: 3>>
[13:26:47.387] M [SCRIPT] [info     ] service init success: <sandbox state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.387] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sandbox state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.387] M [SCRIPT] [info     ] _start_finish [<Service sandbox>] service=<sandbox state=<ServiceState.STARTED: 7>>
[13:26:47.387] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sandbox state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.387] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sandbox state=<ServiceState.STARTED: 7>>
[13:26:47.387] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sandbox state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.387] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fc7b8a0> service=<sandbox state=<ServiceState.RUNNING: 10>>
[13:26:47.387] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sandbox state=<ServiceState.RUNNING: 10>>
[13:26:47.389] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=tutorial service=<tutorial state=<ServiceState.STOPPED: 1>>
[13:26:47.389] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<tutorial state=<ServiceState.INIT: 2>>
[13:26:47.390] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<tutorial state=<ServiceState.INITED: 3>>
[13:26:47.390] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<tutorial state=<ServiceState.INITED: 3>>
[13:26:47.390] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'tutorial', 'view_manager', 'notifier_manager', 'data_recorder', 'tips_manager', 'ui_manager', 'p2log', 'localization'} service=<tutorial state=<ServiceState.INITED: 3>>
[13:26:47.390] M [SCRIPT] [info     ] service init success: <localization state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] service init success: <notifier_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] service init success: <tips_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] service init success: <tutorial state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] service init success: <ui_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] service init success: <data_recorder state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] service init success: <p2log state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] service init success: <view_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.390] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<tutorial state=<ServiceState.INITED: 3>> startup_deps=['ui_manager']
[13:26:47.390] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<ui_manager state=<ServiceState.RUNNING: 10>>
[13:26:47.390] M [SCRIPT] [info     ] _start_finish [<Service tutorial>] service=<tutorial state=<ServiceState.STARTED: 7>>
[13:26:47.390] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<tutorial state=<ServiceState.STARTED: 7>> startup_deps=['ui_manager']
[13:26:47.390] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<tutorial state=<ServiceState.STARTED: 7>>
[13:26:47.391] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['ui_manager'] service=<tutorial state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.391] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<ui_manager state=<ServiceState.RUNNING: 10>>
[13:26:47.391] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fcce4a0> service=<tutorial state=<ServiceState.RUNNING: 10>>
[13:26:47.391] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<tutorial state=<ServiceState.RUNNING: 10>>
[13:26:47.392] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=gmbridge service=<gmbridge state=<ServiceState.STOPPED: 1>>
[13:26:47.392] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<gmbridge state=<ServiceState.INIT: 2>>
[13:26:47.392] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<gmbridge state=<ServiceState.INITED: 3>>
[13:26:47.392] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<gmbridge state=<ServiceState.INITED: 3>>
[13:26:47.392] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'gmbridge'} service=<gmbridge state=<ServiceState.INITED: 3>>
[13:26:47.392] M [SCRIPT] [info     ] service init success: <gmbridge state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.392] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<gmbridge state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.392] M [SCRIPT] [info     ] _start_finish [<Service gmbridge>] service=<gmbridge state=<ServiceState.STARTED: 7>>
[13:26:47.392] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<gmbridge state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.393] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<gmbridge state=<ServiceState.STARTED: 7>>
[13:26:47.393] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<gmbridge state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.393] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fccf860> service=<gmbridge state=<ServiceState.RUNNING: 10>>
[13:26:47.393] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<gmbridge state=<ServiceState.RUNNING: 10>>
[13:26:47.396] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=chat_service service=<chat_service state=<ServiceState.STOPPED: 1>>
[13:26:47.396] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<chat_service state=<ServiceState.INIT: 2>>
[13:26:47.396] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<chat_service state=<ServiceState.INITED: 3>>
[13:26:47.396] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<chat_service state=<ServiceState.INITED: 3>>
[13:26:47.397] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'chat_service', 'chat_micro_service'} service=<chat_service state=<ServiceState.INITED: 3>>
[13:26:47.397] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=chat_micro_service service=<chat_micro_service state=<ServiceState.STOPPED: 1>>
[13:26:47.398] M [SCRIPT] [info     ] service init success: <chat_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.398] M [SCRIPT] [info     ] service init success: <chat_micro_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.398] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<chat_service state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.398] M [SCRIPT] [info     ] _start_finish [<Service chat_service>] service=<chat_service state=<ServiceState.STARTED: 7>>
[13:26:47.398] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<chat_service state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.398] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<chat_service state=<ServiceState.STARTED: 7>>
[13:26:47.398] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['chat_micro_service'] service=<chat_service state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.398] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<chat_micro_service state=<ServiceState.INITED: 3>>
[13:26:47.398] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<chat_micro_service state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.398] M [SCRIPT] [info     ] _start_finish [<Service chat_micro_service>] service=<chat_micro_service state=<ServiceState.STARTED: 7>>
[13:26:47.398] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<chat_micro_service state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.398] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<chat_micro_service state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.398] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd0e320> service=<chat_micro_service state=<ServiceState.RUNNING: 10>>
[13:26:47.398] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd0d2a0> service=<chat_service state=<ServiceState.RUNNING: 10>>
[13:26:47.399] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<chat_service state=<ServiceState.RUNNING: 10>>
[13:26:47.400] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=ngpush_service service=<ngpush_service state=<ServiceState.STOPPED: 1>>
[13:26:47.400] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<ngpush_service state=<ServiceState.INIT: 2>>
[13:26:47.400] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<ngpush_service state=<ServiceState.INITED: 3>>
[13:26:47.400] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<ngpush_service state=<ServiceState.INITED: 3>>
[13:26:47.400] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'ngpush_service'} service=<ngpush_service state=<ServiceState.INITED: 3>>
[13:26:47.400] M [SCRIPT] [info     ] service init success: <ngpush_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.400] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<ngpush_service state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.400] M [SCRIPT] [info     ] _start_finish [<Service ngpush_service>] service=<ngpush_service state=<ServiceState.STARTED: 7>>
[13:26:47.400] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<ngpush_service state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.400] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<ngpush_service state=<ServiceState.STARTED: 7>>
[13:26:47.400] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<ngpush_service state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.400] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd34be0> service=<ngpush_service state=<ServiceState.RUNNING: 10>>
[13:26:47.400] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<ngpush_service state=<ServiceState.RUNNING: 10>>
[13:26:47.401] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sensor_suite service=<sensor_suite state=<ServiceState.STOPPED: 1>>
[13:26:47.401] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sensor_suite state=<ServiceState.INIT: 2>>
[13:26:47.402] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sensor_suite state=<ServiceState.INITED: 3>>
[13:26:47.402] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sensor_suite state=<ServiceState.INITED: 3>>
[13:26:47.402] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'state_svc', 'sensor_suite', 'dataconfig', 'dogma_static', 'michelle', 'dogma_im', 'buff', 'drone', 'network', 'godma', 'target', 'effect_buff_svc', 'inventory_service', 'effect_mgr'} service=<sensor_suite state=<ServiceState.INITED: 3>>
[13:26:47.402] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <sensor_suite state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.402] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.403] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.403] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sensor_suite state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.403] M [SCRIPT] [info     ] _start_finish [<Service sensor_suite>] service=<sensor_suite state=<ServiceState.STARTED: 7>>
[13:26:47.403] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sensor_suite state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.403] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sensor_suite state=<ServiceState.STARTED: 7>>
[13:26:47.403] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['michelle'] service=<sensor_suite state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.403] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<michelle state=<ServiceState.RUNNING: 10>>
[13:26:47.403] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd35620> service=<sensor_suite state=<ServiceState.RUNNING: 10>>
[13:26:47.403] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sensor_suite state=<ServiceState.RUNNING: 10>>
[13:26:47.431] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=test_case service=<test_case state=<ServiceState.STOPPED: 1>>
[13:26:47.431] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<test_case state=<ServiceState.INIT: 2>>
[13:26:47.431] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<test_case state=<ServiceState.INITED: 3>>
[13:26:47.431] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<test_case state=<ServiceState.INITED: 3>>
[13:26:47.431] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'test_case'} service=<test_case state=<ServiceState.INITED: 3>>
[13:26:47.431] M [SCRIPT] [info     ] service init success: <test_case state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.431] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<test_case state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.431] M [SCRIPT] [info     ] _start_finish [<Service test_case>] service=<test_case state=<ServiceState.STARTED: 7>>
[13:26:47.431] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<test_case state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.431] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<test_case state=<ServiceState.STARTED: 7>>
[13:26:47.431] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<test_case state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.432] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd378e0> service=<test_case state=<ServiceState.RUNNING: 10>>
[13:26:47.432] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<test_case state=<ServiceState.RUNNING: 10>>
[13:26:47.433] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=announcement_svc service=<announcement_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.433] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<announcement_svc state=<ServiceState.INIT: 2>>
[13:26:47.433] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<announcement_svc state=<ServiceState.INITED: 3>>
[13:26:47.434] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<announcement_svc state=<ServiceState.INITED: 3>>
[13:26:47.434] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'announcement_svc'} service=<announcement_svc state=<ServiceState.INITED: 3>>
[13:26:47.434] M [SCRIPT] [info     ] service init success: <announcement_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.434] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<announcement_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.434] M [SCRIPT] [info     ] _start_finish [<Service announcement_svc>] service=<announcement_svc state=<ServiceState.STARTED: 7>>
[13:26:47.434] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<announcement_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.434] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<announcement_svc state=<ServiceState.STARTED: 7>>
[13:26:47.434] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<announcement_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.434] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd0d1e0> service=<announcement_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.434] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<announcement_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.436] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=overview_service service=<overview_service state=<ServiceState.STOPPED: 1>>
[13:26:47.436] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<overview_service state=<ServiceState.INIT: 2>>
[13:26:47.436] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<overview_service state=<ServiceState.INITED: 3>>
[13:26:47.436] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<overview_service state=<ServiceState.INITED: 3>>
[13:26:47.437] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'state_svc', 'overview_service', 'dataconfig', 'dogma_static', 'michelle', 'main_icon_svc', 'dogma_im', 'buff', 'drone', 'godma', 'network', 'target', 'effect_buff_svc', 'inventory_service', 'effect_mgr', 'novice'} service=<overview_service state=<ServiceState.INITED: 3>>
[13:26:47.437] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=main_icon_svc service=<main_icon_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.438] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <overview_service state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <novice state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] service init success: <main_icon_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.438] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<overview_service state=<ServiceState.INITED: 3>> startup_deps=['novice']
[13:26:47.438] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<novice state=<ServiceState.RUNNING: 10>>
[13:26:47.438] M [SCRIPT] [info     ] _start_finish [<Service overview_service>] service=<overview_service state=<ServiceState.STARTED: 7>>
[13:26:47.439] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<overview_service state=<ServiceState.STARTED: 7>> startup_deps=['novice']
[13:26:47.439] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<overview_service state=<ServiceState.STARTED: 7>>
[13:26:47.439] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['novice', 'michelle', 'main_icon_svc'] service=<overview_service state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.439] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<novice state=<ServiceState.RUNNING: 10>>
[13:26:47.439] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<michelle state=<ServiceState.RUNNING: 10>>
[13:26:47.439] M [SCRIPT] [info     ] _prepare_running after_inited [ServiceManagerClient] service=<main_icon_svc state=<ServiceState.INITED: 3>>
[13:26:47.439] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<main_icon_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.439] M [SCRIPT] [info     ] _start_finish [<Service main_icon_svc>] service=<main_icon_svc state=<ServiceState.STARTED: 7>>
[13:26:47.439] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<main_icon_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.439] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<main_icon_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.439] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd56420> service=<main_icon_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.439] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd55320> service=<overview_service state=<ServiceState.RUNNING: 10>>
[13:26:47.439] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<overview_service state=<ServiceState.RUNNING: 10>>
[13:26:47.440] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=mall_ad service=<mall_ad state=<ServiceState.STOPPED: 1>>
[13:26:47.440] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<mall_ad state=<ServiceState.INIT: 2>>
[13:26:47.440] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<mall_ad state=<ServiceState.INITED: 3>>
[13:26:47.440] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<mall_ad state=<ServiceState.INITED: 3>>
[13:26:47.440] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'mall_ad'} service=<mall_ad state=<ServiceState.INITED: 3>>
[13:26:47.440] M [SCRIPT] [info     ] service init success: <mall_ad state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.441] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<mall_ad state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.441] M [SCRIPT] [info     ] _start_finish [<Service mall_ad>] service=<mall_ad state=<ServiceState.STARTED: 7>>
[13:26:47.441] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<mall_ad state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.441] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<mall_ad state=<ServiceState.STARTED: 7>>
[13:26:47.441] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<mall_ad state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.441] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd57820> service=<mall_ad state=<ServiceState.RUNNING: 10>>
[13:26:47.441] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<mall_ad state=<ServiceState.RUNNING: 10>>
[13:26:47.442] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=buff_data_svc service=<buff_data_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.442] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<buff_data_svc state=<ServiceState.INIT: 2>>
[13:26:47.442] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<buff_data_svc state=<ServiceState.INITED: 3>>
[13:26:47.442] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<buff_data_svc state=<ServiceState.INITED: 3>>
[13:26:47.442] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'buff_data_svc'} service=<buff_data_svc state=<ServiceState.INITED: 3>>
[13:26:47.442] M [SCRIPT] [info     ] service init success: <buff_data_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.442] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<buff_data_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.442] M [SCRIPT] [info     ] _start_finish [<Service buff_data_svc>] service=<buff_data_svc state=<ServiceState.STARTED: 7>>
[13:26:47.443] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<buff_data_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.443] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<buff_data_svc state=<ServiceState.STARTED: 7>>
[13:26:47.443] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<buff_data_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.443] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd902a0> service=<buff_data_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.443] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<buff_data_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.444] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=defender_ship_svc service=<defender_ship_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.444] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<defender_ship_svc state=<ServiceState.INIT: 2>>
[13:26:47.444] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<defender_ship_svc state=<ServiceState.INITED: 3>>
[13:26:47.444] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<defender_ship_svc state=<ServiceState.INITED: 3>>
[13:26:47.444] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'defender_ship_svc'} service=<defender_ship_svc state=<ServiceState.INITED: 3>>
[13:26:47.444] M [SCRIPT] [info     ] service init success: <defender_ship_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.444] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<defender_ship_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.444] M [SCRIPT] [info     ] _start_finish [<Service defender_ship_svc>] service=<defender_ship_svc state=<ServiceState.STARTED: 7>>
[13:26:47.444] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<defender_ship_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.444] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<defender_ship_svc state=<ServiceState.STARTED: 7>>
[13:26:47.444] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<defender_ship_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.445] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd915a0> service=<defender_ship_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.445] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<defender_ship_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.446] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=return_login_svc service=<return_login_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.446] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<return_login_svc state=<ServiceState.INIT: 2>>
[13:26:47.446] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<return_login_svc state=<ServiceState.INITED: 3>>
[13:26:47.446] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<return_login_svc state=<ServiceState.INITED: 3>>
[13:26:47.446] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'return_login_svc'} service=<return_login_svc state=<ServiceState.INITED: 3>>
[13:26:47.446] M [SCRIPT] [info     ] service init success: <return_login_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.446] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<return_login_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.446] M [SCRIPT] [info     ] _start_finish [<Service return_login_svc>] service=<return_login_svc state=<ServiceState.STARTED: 7>>
[13:26:47.446] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<return_login_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.446] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<return_login_svc state=<ServiceState.STARTED: 7>>
[13:26:47.446] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<return_login_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.446] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd920a0> service=<return_login_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.446] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<return_login_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.448] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=insurance_svc service=<insurance_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.448] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<insurance_svc state=<ServiceState.INIT: 2>>
[13:26:47.448] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<insurance_svc state=<ServiceState.INITED: 3>>
[13:26:47.448] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<insurance_svc state=<ServiceState.INITED: 3>>
[13:26:47.448] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'network', 'insurance_svc'} service=<insurance_svc state=<ServiceState.INITED: 3>>
[13:26:47.448] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.448] M [SCRIPT] [info     ] service init success: <insurance_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.448] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.448] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<insurance_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.448] M [SCRIPT] [info     ] _start_finish [<Service insurance_svc>] service=<insurance_svc state=<ServiceState.STARTED: 7>>
[13:26:47.448] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<insurance_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.448] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<insurance_svc state=<ServiceState.STARTED: 7>>
[13:26:47.448] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net'] service=<insurance_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.448] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.448] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd93060> service=<insurance_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.448] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<insurance_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.449] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=save_location service=<save_location state=<ServiceState.STOPPED: 1>>
[13:26:47.449] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<save_location state=<ServiceState.INIT: 2>>
[13:26:47.450] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<save_location state=<ServiceState.INITED: 3>>
[13:26:47.450] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<save_location state=<ServiceState.INITED: 3>>
[13:26:47.450] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'save_location'} service=<save_location state=<ServiceState.INITED: 3>>
[13:26:47.450] M [SCRIPT] [info     ] service init success: <save_location state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.450] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<save_location state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.463] M [SCRIPT] [info     ] _start_finish [<Service save_location>] service=<save_location state=<ServiceState.STARTED: 7>>
[13:26:47.463] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<save_location state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.463] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<save_location state=<ServiceState.STARTED: 7>>
[13:26:47.463] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<save_location state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.463] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd93c60> service=<save_location state=<ServiceState.RUNNING: 10>>
[13:26:47.463] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<save_location state=<ServiceState.RUNNING: 10>>
[13:26:47.464] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=ship_tree2 service=<ship_tree2 state=<ServiceState.STOPPED: 1>>
[13:26:47.464] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<ship_tree2 state=<ServiceState.INIT: 2>>
[13:26:47.464] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<ship_tree2 state=<ServiceState.INITED: 3>>
[13:26:47.464] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<ship_tree2 state=<ServiceState.INITED: 3>>
[13:26:47.464] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'ship_tree2'} service=<ship_tree2 state=<ServiceState.INITED: 3>>
[13:26:47.465] M [SCRIPT] [info     ] service init success: <ship_tree2 state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.465] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<ship_tree2 state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.465] M [SCRIPT] [info     ] _start_finish [<Service ship_tree2>] service=<ship_tree2 state=<ServiceState.STARTED: 7>>
[13:26:47.465] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<ship_tree2 state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.465] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<ship_tree2 state=<ServiceState.STARTED: 7>>
[13:26:47.465] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<ship_tree2 state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.465] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fdb0920> service=<ship_tree2 state=<ServiceState.RUNNING: 10>>
[13:26:47.465] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<ship_tree2 state=<ServiceState.RUNNING: 10>>
[13:26:47.468] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=scan_svc service=<scan_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.468] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<scan_svc state=<ServiceState.INIT: 2>>
[13:26:47.468] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<scan_svc state=<ServiceState.INITED: 3>>
[13:26:47.468] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<scan_svc state=<ServiceState.INITED: 3>>
[13:26:47.468] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'scan_svc'} service=<scan_svc state=<ServiceState.INITED: 3>>
[13:26:47.468] M [SCRIPT] [info     ] service init success: <scan_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.468] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<scan_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.469] M [SCRIPT] [info     ] _start_finish [<Service scan_svc>] service=<scan_svc state=<ServiceState.STARTED: 7>>
[13:26:47.469] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<scan_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.469] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<scan_svc state=<ServiceState.STARTED: 7>>
[13:26:47.469] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<scan_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.469] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fdb28e0> service=<scan_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.469] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<scan_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.470] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_switch_config service=<sigma_switch_config state=<ServiceState.STOPPED: 1>>
[13:26:47.470] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_switch_config state=<ServiceState.INIT: 2>>
[13:26:47.470] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_switch_config state=<ServiceState.INITED: 3>>
[13:26:47.470] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_switch_config state=<ServiceState.INITED: 3>>
[13:26:47.470] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_switch_config'} service=<sigma_switch_config state=<ServiceState.INITED: 3>>
[13:26:47.470] M [SCRIPT] [info     ] service init success: <sigma_switch_config state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.470] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_switch_config state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.471] M [SCRIPT] [info     ] _start_finish [<Service sigma_switch_config>] service=<sigma_switch_config state=<ServiceState.STARTED: 7>>
[13:26:47.471] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_switch_config state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.471] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_switch_config state=<ServiceState.STARTED: 7>>
[13:26:47.471] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_switch_config state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.471] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fdb3820> service=<sigma_switch_config state=<ServiceState.RUNNING: 10>>
[13:26:47.471] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_switch_config state=<ServiceState.RUNNING: 10>>
[13:26:47.472] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_solar_buff service=<sigma_solar_buff state=<ServiceState.STOPPED: 1>>
[13:26:47.472] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_solar_buff state=<ServiceState.INIT: 2>>
[13:26:47.472] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_solar_buff state=<ServiceState.INITED: 3>>
[13:26:47.472] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_solar_buff state=<ServiceState.INITED: 3>>
[13:26:47.472] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_solar_buff'} service=<sigma_solar_buff state=<ServiceState.INITED: 3>>
[13:26:47.472] M [SCRIPT] [info     ] service init success: <sigma_solar_buff state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.472] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_solar_buff state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.472] M [SCRIPT] [info     ] _start_finish [<Service sigma_solar_buff>] service=<sigma_solar_buff state=<ServiceState.STARTED: 7>>
[13:26:47.472] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_solar_buff state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.472] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_solar_buff state=<ServiceState.STARTED: 7>>
[13:26:47.472] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_solar_buff state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.473] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fd93d20> service=<sigma_solar_buff state=<ServiceState.RUNNING: 10>>
[13:26:47.473] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_solar_buff state=<ServiceState.RUNNING: 10>>
[13:26:47.474] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=dockyard_module_svc service=<dockyard_module_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.475] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<dockyard_module_svc state=<ServiceState.INIT: 2>>
[13:26:47.475] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<dockyard_module_svc state=<ServiceState.INITED: 3>>
[13:26:47.475] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<dockyard_module_svc state=<ServiceState.INITED: 3>>
[13:26:47.475] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'dockyard_module_svc'} service=<dockyard_module_svc state=<ServiceState.INITED: 3>>
[13:26:47.475] M [SCRIPT] [info     ] service init success: <dockyard_module_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.475] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<dockyard_module_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.475] M [SCRIPT] [info     ] _start_finish [<Service dockyard_module_svc>] service=<dockyard_module_svc state=<ServiceState.STARTED: 7>>
[13:26:47.475] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<dockyard_module_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.475] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<dockyard_module_svc state=<ServiceState.STARTED: 7>>
[13:26:47.475] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<dockyard_module_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.475] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fddd260> service=<dockyard_module_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.475] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<dockyard_module_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.478] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=ore_collector_svc service=<ore_collector_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.478] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<ore_collector_svc state=<ServiceState.INIT: 2>>
[13:26:47.478] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<ore_collector_svc state=<ServiceState.INITED: 3>>
[13:26:47.478] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<ore_collector_svc state=<ServiceState.INITED: 3>>
[13:26:47.478] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'novice', 'ore_collector_svc'} service=<ore_collector_svc state=<ServiceState.INITED: 3>>
[13:26:47.478] M [SCRIPT] [info     ] service init success: <novice state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.478] M [SCRIPT] [info     ] service init success: <ore_collector_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.478] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<ore_collector_svc state=<ServiceState.INITED: 3>> startup_deps=['novice']
[13:26:47.478] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<novice state=<ServiceState.RUNNING: 10>>
[13:26:47.478] M [SCRIPT] [info     ] _start_finish [<Service ore_collector_svc>] service=<ore_collector_svc state=<ServiceState.STARTED: 7>>
[13:26:47.478] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<ore_collector_svc state=<ServiceState.STARTED: 7>> startup_deps=['novice']
[13:26:47.478] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<ore_collector_svc state=<ServiceState.STARTED: 7>>
[13:26:47.479] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['novice'] service=<ore_collector_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.479] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<novice state=<ServiceState.RUNNING: 10>>
[13:26:47.479] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fdde3e0> service=<ore_collector_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.479] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<ore_collector_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.486] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=activity_common service=<activity_common state=<ServiceState.STOPPED: 1>>
[13:26:47.486] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<activity_common state=<ServiceState.INIT: 2>>
[13:26:47.486] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<activity_common state=<ServiceState.INITED: 3>>
[13:26:47.487] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<activity_common state=<ServiceState.INITED: 3>>
[13:26:47.487] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'network', 'activity_common'} service=<activity_common state=<ServiceState.INITED: 3>>
[13:26:47.487] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.487] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.487] M [SCRIPT] [info     ] service init success: <activity_common state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.487] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<activity_common state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.487] M [SCRIPT] [info     ] _start_finish [<Service activity_common>] service=<activity_common state=<ServiceState.STARTED: 7>>
[13:26:47.487] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<activity_common state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.487] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<activity_common state=<ServiceState.STARTED: 7>>
[13:26:47.487] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net'] service=<activity_common state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.487] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.487] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fe577e0> service=<activity_common state=<ServiceState.RUNNING: 10>>
[13:26:47.487] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<activity_common state=<ServiceState.RUNNING: 10>>
[13:26:47.491] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=lp_battle_mgr service=<lp_battle_mgr state=<ServiceState.STOPPED: 1>>
[13:26:47.491] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<lp_battle_mgr state=<ServiceState.INIT: 2>>
[13:26:47.492] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<lp_battle_mgr state=<ServiceState.INITED: 3>>
[13:26:47.492] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<lp_battle_mgr state=<ServiceState.INITED: 3>>
[13:26:47.492] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'lp_battle_mgr'} service=<lp_battle_mgr state=<ServiceState.INITED: 3>>
[13:26:47.492] M [SCRIPT] [info     ] service init success: <lp_battle_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.492] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<lp_battle_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.492] M [SCRIPT] [info     ] _start_finish [<Service lp_battle_mgr>] service=<lp_battle_mgr state=<ServiceState.STARTED: 7>>
[13:26:47.492] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<lp_battle_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.492] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<lp_battle_mgr state=<ServiceState.STARTED: 7>>
[13:26:47.492] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<lp_battle_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.492] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13febca20> service=<lp_battle_mgr state=<ServiceState.RUNNING: 10>>
[13:26:47.492] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<lp_battle_mgr state=<ServiceState.RUNNING: 10>>
[13:26:47.495] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=contract_svc service=<contract_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.495] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<contract_svc state=<ServiceState.INIT: 2>>
[13:26:47.495] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<contract_svc state=<ServiceState.INITED: 3>>
[13:26:47.496] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<contract_svc state=<ServiceState.INITED: 3>>
[13:26:47.496] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'dogma_static', 'dataconfig', 'network', 'godma', 'contract_svc'} service=<contract_svc state=<ServiceState.INITED: 3>>
[13:26:47.496] M [SCRIPT] [info     ] service init success: <contract_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.496] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.496] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.496] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.496] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.496] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<contract_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.496] M [SCRIPT] [info     ] _start_finish [<Service contract_svc>] service=<contract_svc state=<ServiceState.STARTED: 7>>
[13:26:47.497] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<contract_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.497] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<contract_svc state=<ServiceState.STARTED: 7>>
[13:26:47.497] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['godma', 'dataconfig'] service=<contract_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.497] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<godma state=<ServiceState.RUNNING: 10>>
[13:26:47.497] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<dataconfig state=<ServiceState.RUNNING: 10>>
[13:26:47.497] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13febeaa0> service=<contract_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.497] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<contract_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.498] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=synthesis_clue service=<synthesis_clue state=<ServiceState.STOPPED: 1>>
[13:26:47.498] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<synthesis_clue state=<ServiceState.INIT: 2>>
[13:26:47.498] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<synthesis_clue state=<ServiceState.INITED: 3>>
[13:26:47.498] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<synthesis_clue state=<ServiceState.INITED: 3>>
[13:26:47.498] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'synthesis_clue'} service=<synthesis_clue state=<ServiceState.INITED: 3>>
[13:26:47.498] M [SCRIPT] [info     ] service init success: <synthesis_clue state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.498] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<synthesis_clue state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.499] M [SCRIPT] [info     ] _start_finish [<Service synthesis_clue>] service=<synthesis_clue state=<ServiceState.STARTED: 7>>
[13:26:47.499] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<synthesis_clue state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.499] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<synthesis_clue state=<ServiceState.STARTED: 7>>
[13:26:47.499] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<synthesis_clue state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.499] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13febf960> service=<synthesis_clue state=<ServiceState.RUNNING: 10>>
[13:26:47.499] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<synthesis_clue state=<ServiceState.RUNNING: 10>>
[13:26:47.500] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=ship_lease service=<ship_lease state=<ServiceState.STOPPED: 1>>
[13:26:47.500] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<ship_lease state=<ServiceState.INIT: 2>>
[13:26:47.500] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<ship_lease state=<ServiceState.INITED: 3>>
[13:26:47.500] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<ship_lease state=<ServiceState.INITED: 3>>
[13:26:47.500] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'ship_lease'} service=<ship_lease state=<ServiceState.INITED: 3>>
[13:26:47.500] M [SCRIPT] [info     ] service init success: <ship_lease state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.500] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<ship_lease state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.500] M [SCRIPT] [info     ] _start_finish [<Service ship_lease>] service=<ship_lease state=<ServiceState.STARTED: 7>>
[13:26:47.500] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<ship_lease state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.500] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<ship_lease state=<ServiceState.STARTED: 7>>
[13:26:47.500] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<ship_lease state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.500] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13febfee0> service=<ship_lease state=<ServiceState.RUNNING: 10>>
[13:26:47.500] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<ship_lease state=<ServiceState.RUNNING: 10>>
[13:26:47.506] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_control service=<sigma_control state=<ServiceState.STOPPED: 1>>
[13:26:47.506] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_control state=<ServiceState.INIT: 2>>
[13:26:47.506] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_control state=<ServiceState.INITED: 3>>
[13:26:47.506] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_control state=<ServiceState.INITED: 3>>
[13:26:47.506] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'sigma_control', 'game_manager', 'network', 'target', 'buff', 'drone', 'effect_buff_svc', 'inventory_service', 'state_svc', 'michelle', 'drone_auto_fire', 'godma', 'p2log', 'effect_mgr', 'equip_auto_fire', 'view_manager', 'notifier_manager', 'data_recorder', 'dogma_static', 'tips_manager', 'ui_manager', 'equip_svc', 'setting', 'dataconfig', 'dogma_im', 'localization'} service=<sigma_control state=<ServiceState.INITED: 3>>
[13:26:47.506] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.506] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <localization state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <tips_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <DroneAutoFire combat_future:None > [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <ui_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <view_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <notifier_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <equip_auto_fire state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <p2log state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <equip_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <setting state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <game_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <sigma_control state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.507] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.508] M [SCRIPT] [info     ] service init success: <data_recorder state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.508] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_control state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.508] M [SCRIPT] [info     ] _start_finish [<Service sigma_control>] service=<sigma_control state=<ServiceState.STARTED: 7>>
[13:26:47.508] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_control state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.508] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_control state=<ServiceState.STARTED: 7>>
[13:26:47.508] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['game_manager'] service=<sigma_control state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.508] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<game_manager state=<ServiceState.RUNNING: 10>>
[13:26:47.508] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1377c1860> service=<sigma_control state=<ServiceState.RUNNING: 10>>
[13:26:47.508] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_control state=<ServiceState.RUNNING: 10>>
[13:26:47.511] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_novice service=<sigma_novice state=<ServiceState.STOPPED: 1>>
[13:26:47.511] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_novice state=<ServiceState.INIT: 2>>
[13:26:47.511] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_novice state=<ServiceState.INITED: 3>>
[13:26:47.511] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_novice state=<ServiceState.INITED: 3>>
[13:26:47.511] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'state_svc', 'dataconfig', 'sigma_novice', 'michelle', 'dogma_static', 'dogma_im', 'buff', 'drone', 'network', 'godma', 'target', 'effect_buff_svc', 'inventory_service', 'effect_mgr'} service=<sigma_novice state=<ServiceState.INITED: 3>>
[13:26:47.512] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <sigma_novice state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.512] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_novice state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.512] M [SCRIPT] [info     ] _start_finish [<Service sigma_novice>] service=<sigma_novice state=<ServiceState.STARTED: 7>>
[13:26:47.513] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_novice state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.513] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_novice state=<ServiceState.STARTED: 7>>
[13:26:47.513] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['michelle'] service=<sigma_novice state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.513] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<michelle state=<ServiceState.RUNNING: 10>>
[13:26:47.513] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x10a4243e0> service=<sigma_novice state=<ServiceState.RUNNING: 10>>
[13:26:47.513] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_novice state=<ServiceState.RUNNING: 10>>
[13:26:47.514] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sprite service=<sprite state=<ServiceState.STOPPED: 1>>
[13:26:47.514] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sprite state=<ServiceState.INIT: 2>>
[13:26:47.514] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sprite state=<ServiceState.INITED: 3>>
[13:26:47.514] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sprite state=<ServiceState.INITED: 3>>
[13:26:47.514] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sprite', 'macho_net', 'network'} service=<sprite state=<ServiceState.INITED: 3>>
[13:26:47.514] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.514] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.514] M [SCRIPT] [info     ] service init success: <sprite state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.514] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sprite state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.514] M [SCRIPT] [info     ] _start_finish [<Service sprite>] service=<sprite state=<ServiceState.STARTED: 7>>
[13:26:47.514] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sprite state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.514] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sprite state=<ServiceState.STARTED: 7>>
[13:26:47.514] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net'] service=<sprite state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.515] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.515] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13b8bc660> service=<sprite state=<ServiceState.RUNNING: 10>>
[13:26:47.515] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sprite state=<ServiceState.RUNNING: 10>>
[13:26:47.517] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=red_packet_svc service=<red_packet_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.517] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<red_packet_svc state=<ServiceState.INIT: 2>>
[13:26:47.517] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<red_packet_svc state=<ServiceState.INITED: 3>>
[13:26:47.517] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<red_packet_svc state=<ServiceState.INITED: 3>>
[13:26:47.517] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'red_packet_svc'} service=<red_packet_svc state=<ServiceState.INITED: 3>>
[13:26:47.517] M [SCRIPT] [info     ] service init success: <red_packet_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.517] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<red_packet_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.517] M [SCRIPT] [info     ] _start_finish [<Service red_packet_svc>] service=<red_packet_svc state=<ServiceState.STARTED: 7>>
[13:26:47.517] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<red_packet_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.517] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<red_packet_svc state=<ServiceState.STARTED: 7>>
[13:26:47.517] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<red_packet_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.518] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ba3d120> service=<red_packet_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.518] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<red_packet_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.519] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=statistic service=<statistic state=<ServiceState.STOPPED: 1>>
[13:26:47.519] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<statistic state=<ServiceState.INIT: 2>>
[13:26:47.519] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<statistic state=<ServiceState.INITED: 3>>
[13:26:47.519] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<statistic state=<ServiceState.INITED: 3>>
[13:26:47.519] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'statistic'} service=<statistic state=<ServiceState.INITED: 3>>
[13:26:47.519] M [SCRIPT] [info     ] service init success: <statistic state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.519] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<statistic state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.520] M [SCRIPT] [info     ] _start_finish [<Service statistic>] service=<statistic state=<ServiceState.STARTED: 7>>
[13:26:47.520] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<statistic state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.520] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<statistic state=<ServiceState.STARTED: 7>>
[13:26:47.520] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<statistic state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.520] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ba3ce60> service=<statistic state=<ServiceState.RUNNING: 10>>
[13:26:47.520] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<statistic state=<ServiceState.RUNNING: 10>>
[13:26:47.522] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=medal_svc service=<medal_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.522] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<medal_svc state=<ServiceState.INIT: 2>>
[13:26:47.522] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<medal_svc state=<ServiceState.INITED: 3>>
[13:26:47.522] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<medal_svc state=<ServiceState.INITED: 3>>
[13:26:47.522] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'medal_svc'} service=<medal_svc state=<ServiceState.INITED: 3>>
[13:26:47.522] M [SCRIPT] [info     ] service init success: <medal_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.522] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<medal_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.522] M [SCRIPT] [info     ] client start medal svc [<Service medal_svc>]
[13:26:47.522] M [SCRIPT] [info     ] _start_finish [<Service medal_svc>] service=<medal_svc state=<ServiceState.STARTED: 7>>
[13:26:47.522] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<medal_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.523] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<medal_svc state=<ServiceState.STARTED: 7>>
[13:26:47.523] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<medal_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.523] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ba3f6e0> service=<medal_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.523] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<medal_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.524] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=museum_svc service=<museum_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.524] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<museum_svc state=<ServiceState.INIT: 2>>
[13:26:47.524] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<museum_svc state=<ServiceState.INITED: 3>>
[13:26:47.524] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<museum_svc state=<ServiceState.INITED: 3>>
[13:26:47.524] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'museum_svc'} service=<museum_svc state=<ServiceState.INITED: 3>>
[13:26:47.524] M [SCRIPT] [info     ] service init success: <museum_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.524] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<museum_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.524] M [SCRIPT] [info     ] _start_finish [<Service museum_svc>] service=<museum_svc state=<ServiceState.STARTED: 7>>
[13:26:47.524] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<museum_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.524] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<museum_svc state=<ServiceState.STARTED: 7>>
[13:26:47.524] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<museum_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.524] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1396b9be0> service=<museum_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.524] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<museum_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.533] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=vt_svc service=<vt_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.533] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<vt_svc state=<ServiceState.INIT: 2>>
[13:26:47.533] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<vt_svc state=<ServiceState.INITED: 3>>
[13:26:47.533] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<vt_svc state=<ServiceState.INITED: 3>>
[13:26:47.533] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'vt_svc'} service=<vt_svc state=<ServiceState.INITED: 3>>
[13:26:47.533] M [SCRIPT] [info     ] service init success: <vt_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.533] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<vt_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.534] M [SCRIPT] [info     ] _start_finish [<Service vt_svc>] service=<vt_svc state=<ServiceState.STARTED: 7>>
[13:26:47.534] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<vt_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.534] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<vt_svc state=<ServiceState.STARTED: 7>>
[13:26:47.534] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<vt_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.534] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ba508e0> service=<vt_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.534] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<vt_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.535] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=monthly_card_svc service=<monthly_card_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.535] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<monthly_card_svc state=<ServiceState.INIT: 2>>
[13:26:47.535] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<monthly_card_svc state=<ServiceState.INITED: 3>>
[13:26:47.535] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<monthly_card_svc state=<ServiceState.INITED: 3>>
[13:26:47.535] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'monthly_card_svc'} service=<monthly_card_svc state=<ServiceState.INITED: 3>>
[13:26:47.535] M [SCRIPT] [info     ] service init success: <monthly_card_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.535] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<monthly_card_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.536] M [SCRIPT] [info     ] _start_finish [<Service monthly_card_svc>] service=<monthly_card_svc state=<ServiceState.STARTED: 7>>
[13:26:47.536] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<monthly_card_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.536] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<monthly_card_svc state=<ServiceState.STARTED: 7>>
[13:26:47.536] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<monthly_card_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.536] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13ba346a0> service=<monthly_card_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.536] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<monthly_card_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.538] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=character service=<character state=<ServiceState.STOPPED: 1>>
[13:26:47.538] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<character state=<ServiceState.INIT: 2>>
[13:26:47.538] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<character state=<ServiceState.INITED: 3>>
[13:26:47.539] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<character state=<ServiceState.INITED: 3>>
[13:26:47.539] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'character', 'http_svc', 'network'} service=<character state=<ServiceState.INITED: 3>>
[13:26:47.539] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.539] M [SCRIPT] [info     ] service init success: <character state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.539] M [SCRIPT] [info     ] service init success: <http_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.539] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.539] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<character state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.539] M [SCRIPT] [info     ] _start_finish [<Service character>] service=<character state=<ServiceState.STARTED: 7>>
[13:26:47.539] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<character state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.539] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<character state=<ServiceState.STARTED: 7>>
[13:26:47.539] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['macho_net', 'http_svc'] service=<character state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.539] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.539] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<http_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.539] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fff8460> service=<character state=<ServiceState.RUNNING: 10>>
[13:26:47.539] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<character state=<ServiceState.RUNNING: 10>>
[13:26:47.541] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=notification_badge service=<notification_badge state=<ServiceState.STOPPED: 1>>
[13:26:47.541] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<notification_badge state=<ServiceState.INIT: 2>>
[13:26:47.541] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<notification_badge state=<ServiceState.INITED: 3>>
[13:26:47.541] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<notification_badge state=<ServiceState.INITED: 3>>
[13:26:47.541] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'notification_badge'} service=<notification_badge state=<ServiceState.INITED: 3>>
[13:26:47.541] M [SCRIPT] [info     ] service init success: <notification_badge state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.541] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<notification_badge state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.541] M [SCRIPT] [info     ] _start_finish [<Service notification_badge>] service=<notification_badge state=<ServiceState.STARTED: 7>>
[13:26:47.541] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<notification_badge state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.542] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<notification_badge state=<ServiceState.STARTED: 7>>
[13:26:47.542] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<notification_badge state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.542] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13fff9520> service=<notification_badge state=<ServiceState.RUNNING: 10>>
[13:26:47.542] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<notification_badge state=<ServiceState.RUNNING: 10>>
[13:26:47.564] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=sigma_industry service=<sigma_industry state=<ServiceState.STOPPED: 1>>
[13:26:47.564] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<sigma_industry state=<ServiceState.INIT: 2>>
[13:26:47.564] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<sigma_industry state=<ServiceState.INITED: 3>>
[13:26:47.564] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<sigma_industry state=<ServiceState.INITED: 3>>
[13:26:47.564] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'sigma_industry'} service=<sigma_industry state=<ServiceState.INITED: 3>>
[13:26:47.564] M [SCRIPT] [info     ] service init success: <sigma_industry state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.564] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<sigma_industry state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.564] M [SCRIPT] [info     ] _start_finish [<Service sigma_industry>] service=<sigma_industry state=<ServiceState.STARTED: 7>>
[13:26:47.564] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<sigma_industry state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.564] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<sigma_industry state=<ServiceState.STARTED: 7>>
[13:26:47.564] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<sigma_industry state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.564] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1400f11e0> service=<sigma_industry state=<ServiceState.RUNNING: 10>>
[13:26:47.564] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<sigma_industry state=<ServiceState.RUNNING: 10>>
[13:26:47.566] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=user_rewards service=<user_rewards state=<ServiceState.STOPPED: 1>>
[13:26:47.566] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<user_rewards state=<ServiceState.INIT: 2>>
[13:26:47.566] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<user_rewards state=<ServiceState.INITED: 3>>
[13:26:47.566] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<user_rewards state=<ServiceState.INITED: 3>>
[13:26:47.566] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'user_rewards'} service=<user_rewards state=<ServiceState.INITED: 3>>
[13:26:47.566] M [SCRIPT] [info     ] service init success: <user_rewards state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.566] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<user_rewards state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.566] M [SCRIPT] [info     ] _start_finish [<Service user_rewards>] service=<user_rewards state=<ServiceState.STARTED: 7>>
[13:26:47.566] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<user_rewards state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.566] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<user_rewards state=<ServiceState.STARTED: 7>>
[13:26:47.567] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<user_rewards state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.567] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1400f2aa0> service=<user_rewards state=<ServiceState.RUNNING: 10>>
[13:26:47.567] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<user_rewards state=<ServiceState.RUNNING: 10>>
[13:26:47.569] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=detect_svc service=<detect_svc state=<ServiceState.STOPPED: 1>>
[13:26:47.569] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<detect_svc state=<ServiceState.INIT: 2>>
[13:26:47.569] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<detect_svc state=<ServiceState.INITED: 3>>
[13:26:47.569] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<detect_svc state=<ServiceState.INITED: 3>>
[13:26:47.569] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'detect_svc'} service=<detect_svc state=<ServiceState.INITED: 3>>
[13:26:47.569] M [SCRIPT] [info     ] service init success: <detect_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.569] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<detect_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.570] M [SCRIPT] [info     ] _start_finish [<Service detect_svc>] service=<detect_svc state=<ServiceState.STARTED: 7>>
[13:26:47.570] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<detect_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.570] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<detect_svc state=<ServiceState.STARTED: 7>>
[13:26:47.570] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<detect_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.570] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x140113260> service=<detect_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.570] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<detect_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.573] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=login service=<login state=<ServiceState.STOPPED: 1>>
[13:26:47.573] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<login state=<ServiceState.INIT: 2>>
[13:26:47.573] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<login state=<ServiceState.INITED: 3>>
[13:26:47.573] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<login state=<ServiceState.INITED: 3>>
[13:26:47.573] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'login', 'macho_net', 'network', 'http_svc', 'localization'} service=<login state=<ServiceState.INITED: 3>>
[13:26:47.573] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.573] M [SCRIPT] [info     ] service init success: <localization state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.573] M [SCRIPT] [info     ] service init success: <login state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.573] M [SCRIPT] [info     ] service init success: <http_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.573] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:47.573] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<login state=<ServiceState.INITED: 3>> startup_deps=['network', 'macho_net', 'http_svc', 'localization']
[13:26:47.573] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<network state=<ServiceState.RUNNING: 10>>
[13:26:47.573] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.573] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<http_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.573] M [SCRIPT] [info     ] _starting started [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:47.574] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=unisdk service=<unisdk state=<ServiceState.STOPPED: 1>>
[13:26:47.575] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<unisdk state=<ServiceState.INIT: 2>>
[13:26:47.575] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<unisdk state=<ServiceState.INITED: 3>>
[13:26:47.575] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<unisdk state=<ServiceState.INITED: 3>>
[13:26:47.575] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'unisdk'} service=<unisdk state=<ServiceState.INITED: 3>>
[13:26:47.575] M [SCRIPT] [info     ] service init success: <unisdk state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:47.575] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<unisdk state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:47.575] M [SCRIPT] [info     ] _start_finish [<Service unisdk>] service=<unisdk state=<ServiceState.STARTED: 7>>
[13:26:47.575] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<unisdk state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:47.575] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<unisdk state=<ServiceState.STARTED: 7>>
[13:26:47.575] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<unisdk state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.575] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x140151ee0> service=<unisdk state=<ServiceState.RUNNING: 10>>
[13:26:47.575] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<unisdk state=<ServiceState.RUNNING: 10>>
[13:26:47.575] M [SCRIPT] [warning  ] [get_uiview_class][module=ui_new.login.sdk_login][miss UIView class] [ui_manager.utility]
[13:26:47.582] M [SCRIPT] ('drpf success', 0, 'LoginUI')
[13:26:47.583] M [SCRIPT] [info     ] _start_finish [<Service login>] service=<login state=<ServiceState.STARTED: 7>>
[13:26:47.583] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<login state=<ServiceState.STARTED: 7>> startup_deps=['network', 'macho_net', 'http_svc', 'localization']
[13:26:47.583] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<login state=<ServiceState.STARTED: 7>>
[13:26:47.583] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['network', 'macho_net', 'http_svc', 'localization'] service=<login state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:47.583] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<network state=<ServiceState.RUNNING: 10>>
[13:26:47.583] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<macho_net state=<ServiceState.RUNNING: 10>>
[13:26:47.583] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<http_svc state=<ServiceState.RUNNING: 10>>
[13:26:47.583] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<localization state=<ServiceState.RUNNING: 10>>
[13:26:47.583] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x140150c60> service=<login state=<ServiceState.RUNNING: 10>>
[13:26:47.583] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<login state=<ServiceState.RUNNING: 10>>
[13:26:47.598] M [IOS] application:layoutSubViews:
[13:26:47.967] M [IOS] application:layoutSubViews:
[13:26:47.996] M [UNISDK] [NtUniSdk]onProtocolFinish
[13:26:47.997] M [SCRIPT] [info     ] [_on_auth_end][succeed=True][auto_login=None][auth=<service.mgt.user.login.ChannelAccountAuth object at 0x140151560>] [<Service login>] log_tag=ripple_log
[13:26:48.127] M [SCRIPT] [INFO] - [detect start][scene_id=33]
[13:26:48.127] M [SCRIPT] [INFO] - [detect end][scene_id=33]
[13:26:48.127] M [SCRIPT] [warning  ] [get_uiview_class][module=ui_new.login.default_server_panel][miss UIView class] [ui_manager.utility] log_tag=ripple_log
[13:26:48.295] M [SCRIPT] [INFO] - [detect start][scene_id=33]
[13:26:48.295] M [SCRIPT] [INFO] - [detect end][scene_id=33]
[13:26:48.296] M [SCRIPT] [set_path][new_path=eve][current_path=eve]
[13:26:48.492] M [SCRIPT] [info     ] [show_notice][need_show=False][old_md5=['60ce24e98a598fff20e1ad4627e52a50', 'd1e7786c6171553c23aedd9e59a7134c', 'efa8908205cb4be189a7e18e0d871abc', '7f215e17aaf274d2e0b78c2dd5293e31', 'd41d8cd98f00b204e9800998ecf8427e', 'd41d8cd98f00b204e9800998ecf8427e']][new_md5=['60ce24e98a598fff20e1ad4627e52a50', 'd1e7786c6171553c23aedd9e59a7134c', 'efa8908205cb4be189a7e18e0d871abc', '7f215e17aaf274d2e0b78c2dd5293e31', 'd41d8cd98f00b204e9800998ecf8427e', 'd41d8cd98f00b204e9800998ecf8427e']] [login.notice_util]
[13:26:48.503] M [UNISDK] [NtUniSdk]onProtocolFinish
[13:26:49.589] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:26:49.647] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:26:49.647] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:26:49.647] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:26:49.648] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:26:49.656] M [AUDIO] -----Load wwise\ui.bnk succeed!
[13:26:50.033] M [SCRIPT] [set_path][new_path=eve][current_path=eve]
[13:26:50.124] M [SCRIPT] [info     ] connect server [ClientConnectionWatcherEchoes] reason=None server=0
[13:26:50.164] M [SCRIPT] [info     ] connect_node begin [ClientConnectionWatcherEchoes] connect_stages=[<ripple.network.stage.SendNodeInfo object at 0x13fc0aa60>, <service.node.client.ConfirmAcceptedClient object at 0x13fc0a9e0>] transceiver=<TransceiverStream state=<State.INITED: 2> sid=7321238205104128061 token=c8af2214-bd71-4472-8012-8fee37285be5 remote_token= node_info=None>
[13:26:50.332] M [SCRIPT] [info     ] connect_node run_one_stage [ClientConnectionWatcherEchoes] connect_stage=<ripple.network.stage.SendNodeInfo object at 0x13fc0aa60> transceiver=<TransceiverStream state=<State.STARTED: 4> sid=7321238205104128061 token=c8af2214-bd71-4472-8012-8fee37285be5 remote_token= node_info=None writer=<StreamWriter transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>> reader=<StreamReader transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>>>>>
[13:26:50.332] M [SCRIPT] [info     ] connect_node run_one_stage [ClientConnectionWatcherEchoes] connect_stage=<service.node.client.ConfirmAcceptedClient object at 0x13fc0a9e0> transceiver=<TransceiverStream state=<State.STARTED: 4> sid=7321238205104128061 token=c8af2214-bd71-4472-8012-8fee37285be5 remote_token= node_info=None writer=<StreamWriter transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>> reader=<StreamReader transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>>>>>
[13:26:50.432] M [SCRIPT] [info     ] confirm_accepted [ConfirmAcceptedClient] client_id=429496927168498559 proxy_node_id=100000046
[13:26:50.465] M [SCRIPT] [info     ] transceiver_accepted [ClientConnectionWatcherEchoes] connection=None server_name=0 transceiver=<TransceiverStream state=<State.STARTED: 4> sid=7321238205993321147 token=c8af2214-bd71-4472-8012-8fee37285be5 remote_token=68616884-e115-4340-8673-d3a0d578747a node_info=ServerNodeInfo(node_mask=<NodeMask.SERVER: 536870912>, node_type=1, node_id=429496927168498559, node_name='proxy46', node_state='ONLINE', extra_info=None, servers={}) writer=<StreamWriter transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>> reader=<StreamReader transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>>>>>
[13:26:50.466] M [SCRIPT] [info     ] create_connection [ConnectionManager] connection=<Connection cid=2 sid=7321238205993321147 state=<State.INITED: 2> tran=<TransceiverStream state=<State.STARTED: 4> sid=7321238205993321147 token=c8af2214-bd71-4472-8012-8fee37285be5 remote_token=68616884-e115-4340-8673-d3a0d578747a node_info=ServerNodeInfo(node_mask=<NodeMask.SERVER: 536870912>, node_type=1, node_id=100000046, node_name='proxy46', node_state='ONLINE', extra_info=None, servers={}) writer=<StreamWriter transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>> reader=<StreamReader transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>>>>>>
[13:26:50.466] M [SCRIPT] [info     ] add_connection [ConnectionManager] connection=<Connection cid=2 sid=7321238205993321147 state=<State.INITED: 2> tran=<TransceiverStream state=<State.STARTED: 4> sid=7321238205993321147 token=c8af2214-bd71-4472-8012-8fee37285be5 remote_token=68616884-e115-4340-8673-d3a0d578747a node_info=ServerNodeInfo(node_mask=<NodeMask.SERVER: 536870912>, node_type=1, node_id=100000046, node_name='proxy46', node_state='ONLINE', extra_info=None, servers={}) writer=<StreamWriter transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>> reader=<StreamReader transport=<_SelectorSocketTransport fd=136 read=polling write=<idle, bufsize=0>>>>>>
[13:26:50.477] M [SCRIPT] [warning  ] [get_uiview_class][module=ui_new.tips.tip_panel_new][miss UIView class] [ui_manager.utility]
[13:26:50.485] M [COCOSUI] cocos load ttf : <gui_v1/fonts/shentoxcyr_bold.ttf>
[13:26:50.502] M [COCOSUI] cocos load ttf : <gui_v1/fonts/font_bold.ttf>
[13:26:51.065] M [SCRIPT] [info     ] [login][finish][code=0][response={'proxy_node_id': 100000046, 'client_id': 429496927168498559, 'session_id': 7321238205993321147, 'current_season': 'eve', 'session_init': LoginSessionInit(user_id=103576431, roles=2, language_id='en', jelly_info={'access_token': None, 'sdk_aid': 4483445, 'sdk_uid': '541356092', 'sdk_username': '541356092@netease_global.win.163.com', 'unisdk_login_json': 'eyJhaWQiOiI0NDgzNDQ1Iiwic2RrdWlkIjoiNTQxMzU2MDkyIiwidXNlcm5hbWUiOiI1NDEzNTYwOTJAbmV0ZWFzZV9nbG9iYWwud2luLjE2My5jb20iLCJzZXJ2ZXJfdGltZSI6MTc0NTUxOTIxMCwiYWNjZXNzX3Rva2VuIjoiIiwiZXhwaXJlc19pbiI6IiIsInJlZnJlc2hfdG9rZW4iOiIiLCJyZWZyZXNoX2V4cGlyZXNfaW4iOiIiLCJjaGxfc2RrX2pzb24iOnsic2RrdWlkIjoiNTQxMzU2MDkyIiwiYWlkIjoiNDQ4MzQ0NSIsInRpbWVzdGFtcCI6IjE3NDU1MTkyMTAiLCJzaWduIjoiYWU2MzBiMTgyOWY4ZjE1MjhlMzQ4NjM0YzVkNGQxYmM0MzRiZjgzMGE2NzRlYzA1NWY0YTQ2MWZjZTZlY2YyZCJ9LCJhYXNfdmVyc2lvbiI6InYzIiwib2F1dGgyIjp7ImFjY2Vzc190b2tlbiI6ImV5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpsZUhBaU9qRTNORFUzTnpnME1UQXNJbWxoZENJNk1UYzBOVFV4T1RJeE1Dd2ljM1ZpSWpvaU5UUXhNelUyTURreVFHNWxkR1ZoYzJWZloyeHZZbUZzTG5kcGJpNHhOak11WTI5dE9tNWxkR1ZoYzJWZloyeHZZbUZzT21sdmN5SXNJbWRoYldWcFpDSTZJbWM0Tlc1aGVIZ3laMklpZlEuRVFJWDdRUW81V0Q5S0l6R2pKcWZUcXNYZG92SlVlbEotVnBZaUkwdEFpTSIsInJlZnJlc2hfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKbGVIQWlPakUzTkRneE1URXlNVEFzSW1saGRDSTZNVGMwTlRVeE9USXhNQ3dpYzNWaUlqb2lOVFF4TXpVMk1Ea3lRRzVsZEdWaGMyVmZaMnh2WW1Gc0xuZHBiaTR4TmpNdVkyOXRPbTVsZEdWaGMyVmZaMnh2WW1Gc09tbHZjeUlzSW1kaGJXVnBaQ0k2SW1jNE5XNWhlSGd5WjJJaUxDSjBlWEFpT2pGOS44WGhobGdma0tfRWZMY2d6UnU3NW9lVzQwWFM3dXd1ZU1JaDR2SG84RmdjIn19', 'sauth_login_type': None, 'aas_msg': {'need_realname': False, 'reason': '', 'need_role_enter': False, 'need_realname_v2': False, 'reason_v2': '', 'need_role_enter_v2': False}, 'realname_msg': {'oversea': False, 'id_hash': '', 'verify_status': 0, 'birthday': '', 'age_range': 0, 'update_guide': 0, 'age': 0, 'age_range_v2': -1}, 'aas_ban': {'ban': -1, 'ban_msg': ''}, 'urs': None, 'bound_account_ids': {'16': ['000968.a28a678a69634882b0f1f0ec727e7be5.0351'], '2': ['G:1535317496'], '4': ['10224252898768226'], '5': ['2589373645']}, 'app_channel': 'g85naxx2gb@app_store'}, sdk_info={'ip': '173.16.70.224', 'connection_ip': '173.16.70.224', 'urs': None, 'engine_ver': '5.2.3', 'device_model': 'iPad13,9', 'os_name': 'ios', 'os_ver': '18.4.1', 'mac_addr': '', 'udid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F', 'app_ver': 1745410503, 'app_channel': 'g85naxx2gb@app_store', 'transid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F_1745519203876_238623164', 'unisdk_deviceid': '1806686289', 'network': 'wifi', 'country_code': 'US', 'test_group': '', 'device_width': '2732', 'device_height': '2048', 'is_jailbreak': 0, 'account_id': '541356092@netease_global.win.163.com', 'old_accountid': '541356092@netease_global.win.163.com', 'tdid': ''}, logon_date=datetime.datetime(2025, 4, 24, 18, 26, 50)), 'reconnect_key': '68616884-e115-4340-8673-d3a0d578747a'}] [<Service login>]
[13:26:51.066] M [SCRIPT] [INFO] - [detect start][scene_id=34]
[13:26:51.066] M [SCRIPT] [INFO] - [detect end][scene_id=34]
[13:26:51.066] M [SCRIPT] ('sdk_auth_type is ', 'gamecenter')
[13:26:51.068] M [SCRIPT] ('drpf success', 0, 'Identification')
[13:26:51.132] M [SCRIPT] [info     ] apply_session_change [SessionManager] change_map={1: {'user_id': 103576431}, 2: {'language_id': 'en', 'jelly_info': {'access_token': None, 'sdk_aid': 4483445, 'sdk_uid': '541356092', 'sdk_username': '541356092@netease_global.win.163.com', 'unisdk_login_json': 'eyJhaWQiOiI0NDgzNDQ1Iiwic2RrdWlkIjoiNTQxMzU2MDkyIiwidXNlcm5hbWUiOiI1NDEzNTYwOTJAbmV0ZWFzZV9nbG9iYWwud2luLjE2My5jb20iLCJzZXJ2ZXJfdGltZSI6MTc0NTUxOTIxMCwiYWNjZXNzX3Rva2VuIjoiIiwiZXhwaXJlc19pbiI6IiIsInJlZnJlc2hfdG9rZW4iOiIiLCJyZWZyZXNoX2V4cGlyZXNfaW4iOiIiLCJjaGxfc2RrX2pzb24iOnsic2RrdWlkIjoiNTQxMzU2MDkyIiwiYWlkIjoiNDQ4MzQ0NSIsInRpbWVzdGFtcCI6IjE3NDU1MTkyMTAiLCJzaWduIjoiYWU2MzBiMTgyOWY4ZjE1MjhlMzQ4NjM0YzVkNGQxYmM0MzRiZjgzMGE2NzRlYzA1NWY0YTQ2MWZjZTZlY2YyZCJ9LCJhYXNfdmVyc2lvbiI6InYzIiwib2F1dGgyIjp7ImFjY2Vzc190b2tlbiI6ImV5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpsZUhBaU9qRTNORFUzTnpnME1UQXNJbWxoZENJNk1UYzBOVFV4T1RJeE1Dd2ljM1ZpSWpvaU5UUXhNelUyTURreVFHNWxkR1ZoYzJWZloyeHZZbUZzTG5kcGJpNHhOak11WTI5dE9tNWxkR1ZoYzJWZloyeHZZbUZzT21sdmN5SXNJbWRoYldWcFpDSTZJbWM0Tlc1aGVIZ3laMklpZlEuRVFJWDdRUW81V0Q5S0l6R2pKcWZUcXNYZG92SlVlbEotVnBZaUkwdEFpTSIsInJlZnJlc2hfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKbGVIQWlPakUzTkRneE1URXlNVEFzSW1saGRDSTZNVGMwTlRVeE9USXhNQ3dpYzNWaUlqb2lOVFF4TXpVMk1Ea3lRRzVsZEdWaGMyVmZaMnh2WW1Gc0xuZHBiaTR4TmpNdVkyOXRPbTVsZEdWaGMyVmZaMnh2WW1Gc09tbHZjeUlzSW1kaGJXVnBaQ0k2SW1jNE5XNWhlSGd5WjJJaUxDSjBlWEFpT2pGOS44WGhobGdma0tfRWZMY2d6UnU3NW9lVzQwWFM3dXd1ZU1JaDR2SG84RmdjIn19', 'sauth_login_type': None, 'aas_msg': {'need_realname': False, 'reason': '', 'need_role_enter': False, 'need_realname_v2': False, 'reason_v2': '', 'need_role_enter_v2': False}, 'realname_msg': {'oversea': False, 'id_hash': '', 'verify_status': 0, 'birthday': '', 'age_range': 0, 'update_guide': 0, 'age': 0, 'age_range_v2': -1}, 'aas_ban': {'ban': -1, 'ban_msg': ''}, 'urs': None, 'bound_account_ids': {'16': ['000968.a28a678a69634882b0f1f0ec727e7be5.0351'], '2': ['G:1535317496'], '4': ['10224252898768226'], '5': ['2589373645']}, 'app_channel': 'g85naxx2gb@app_store'}, 'current_season': 'eve', 'sdk_info': {'ip': '173.16.70.224', 'connection_ip': '173.16.70.224', 'urs': None, 'engine_ver': '5.2.3', 'device_model': 'iPad13,9', 'os_name': 'ios', 'os_ver': '18.4.1', 'mac_addr': '', 'udid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F', 'app_ver': 1745410503, 'app_channel': 'g85naxx2gb@app_store', 'transid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F_1745519203876_238623164', 'unisdk_deviceid': '1806686289', 'network': 'wifi', 'country_code': 'US', 'test_group': '', 'device_width': '2732', 'device_height': '2048', 'is_jailbreak': 0, 'account_id': '541356092@netease_global.win.163.com', 'old_accountid': '541356092@netease_global.win.163.com', 'tdid': ''}}} change_type=<SessionChangeType.SYNC: 2> node_id=429496927168498559 sid=7321238205993321147
[13:26:51.165] M [SCRIPT] [switch_path][new_path=eve][current_path=eve]
[13:26:51.165] M [SCRIPT] [set_path][new_path=eve][current_path=eve]
[13:26:51.300] M [SCRIPT] [info     ] Initializing the pathfinding internals [<Service path_finder>]
[13:26:51.485] M [SCRIPT] [info     ] [path_finder][create_path_finder][system_cnt=20150] [path_finder]
[13:26:51.532] M [SCRIPT] [info     ] on_session_changed [<Service view_manager>] change={'user_id': (None, 103576431), 'language_id': (None, 'en'), 'jelly_info': (None, {'access_token': None, 'sdk_aid': 4483445, 'sdk_uid': '541356092', 'sdk_username': '541356092@netease_global.win.163.com', 'unisdk_login_json': 'eyJhaWQiOiI0NDgzNDQ1Iiwic2RrdWlkIjoiNTQxMzU2MDkyIiwidXNlcm5hbWUiOiI1NDEzNTYwOTJAbmV0ZWFzZV9nbG9iYWwud2luLjE2My5jb20iLCJzZXJ2ZXJfdGltZSI6MTc0NTUxOTIxMCwiYWNjZXNzX3Rva2VuIjoiIiwiZXhwaXJlc19pbiI6IiIsInJlZnJlc2hfdG9rZW4iOiIiLCJyZWZyZXNoX2V4cGlyZXNfaW4iOiIiLCJjaGxfc2RrX2pzb24iOnsic2RrdWlkIjoiNTQxMzU2MDkyIiwiYWlkIjoiNDQ4MzQ0NSIsInRpbWVzdGFtcCI6IjE3NDU1MTkyMTAiLCJzaWduIjoiYWU2MzBiMTgyOWY4ZjE1MjhlMzQ4NjM0YzVkNGQxYmM0MzRiZjgzMGE2NzRlYzA1NWY0YTQ2MWZjZTZlY2YyZCJ9LCJhYXNfdmVyc2lvbiI6InYzIiwib2F1dGgyIjp7ImFjY2Vzc190b2tlbiI6ImV5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpsZUhBaU9qRTNORFUzTnpnME1UQXNJbWxoZENJNk1UYzBOVFV4T1RJeE1Dd2ljM1ZpSWpvaU5UUXhNelUyTURreVFHNWxkR1ZoYzJWZloyeHZZbUZzTG5kcGJpNHhOak11WTI5dE9tNWxkR1ZoYzJWZloyeHZZbUZzT21sdmN5SXNJbWRoYldWcFpDSTZJbWM0Tlc1aGVIZ3laMklpZlEuRVFJWDdRUW81V0Q5S0l6R2pKcWZUcXNYZG92SlVlbEotVnBZaUkwdEFpTSIsInJlZnJlc2hfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKbGVIQWlPakUzTkRneE1URXlNVEFzSW1saGRDSTZNVGMwTlRVeE9USXhNQ3dpYzNWaUlqb2lOVFF4TXpVMk1Ea3lRRzVsZEdWaGMyVmZaMnh2WW1Gc0xuZHBiaTR4TmpNdVkyOXRPbTVsZEdWaGMyVmZaMnh2WW1Gc09tbHZjeUlzSW1kaGJXVnBaQ0k2SW1jNE5XNWhlSGd5WjJJaUxDSjBlWEFpT2pGOS44WGhobGdma0tfRWZMY2d6UnU3NW9lVzQwWFM3dXd1ZU1JaDR2SG84RmdjIn19', 'sauth_login_type': None, 'aas_msg': {'need_realname': False, 'reason': '', 'need_role_enter': False, 'need_realname_v2': False, 'reason_v2': '', 'need_role_enter_v2': False}, 'realname_msg': {'oversea': False, 'id_hash': '', 'verify_status': 0, 'birthday': '', 'age_range': 0, 'update_guide': 0, 'age': 0, 'age_range_v2': -1}, 'aas_ban': {'ban': -1, 'ban_msg': ''}, 'urs': None, 'bound_account_ids': {'16': ['000968.a28a678a69634882b0f1f0ec727e7be5.0351'], '2': ['G:1535317496'], '4': ['10224252898768226'], '5': ['2589373645']}, 'app_channel': 'g85naxx2gb@app_store'}), 'current_season': (None, 'eve'), 'sdk_info': (None, {'ip': '173.16.70.224', 'connection_ip': '173.16.70.224', 'urs': None, 'engine_ver': '5.2.3', 'device_model': 'iPad13,9', 'os_name': 'ios', 'os_ver': '18.4.1', 'mac_addr': '', 'udid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F', 'app_ver': 1745410503, 'app_channel': 'g85naxx2gb@app_store', 'transid': '5E596B43-9922-4AE2-A3AF-726F38B67B1F_1745519203876_238623164', 'unisdk_deviceid': '1806686289', 'network': 'wifi', 'country_code': 'US', 'test_group': '', 'device_width': '2732', 'device_height': '2048', 'is_jailbreak': 0, 'account_id': '541356092@netease_global.win.163.com', 'old_accountid': '541356092@netease_global.win.163.com', 'tdid': ''})} session=<ClientSession sid=7321238205993321147 rv=2 v=2 client_id=429496927168498559 locked=<RWLock: <ReaderLock: [unlocked]> <WriterLock: [unlocked]>> attr=dict_values([<AttributeGroup flag=0 attrs=StatusAttributes(roles=2, status=<SessionStatus.INITED: 2>, reason='')>, <AttributeGroup flag=1 attrs=CoreAttributes(user_id=103576431, char_id=None, region_id=None, constellation_id=None, solar_system_id=None, solar_system_id2=None, station_id=None, station_id2=None, world_space_id=None, structure_id=None, location_id=None, ship_id=None, ship_type_id=None)>, <AttributeGroup flag=2 attrs=IndependentAttributes(char_name=None, tech_level=0, omega=0, alliance_id=None, corp_id=None, corp_role=0, corp_account_key=None, fleet_id=None, fleet_role=None, wing_id=None, squad_id=None, vip_gm=0, dockyard_inv_id=None, dockyard_inv_station_id=None, dockyard_inv_solar_id=None, origin_force_id=0, vt_id=None, vt_role=0, vt_position=0, vt_team_id=0, dockyard_level=0)>])>
[13:26:51.573] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=space_mgr service=<space_mgr state=<ServiceState.STOPPED: 1>>
[13:26:51.599] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<space_mgr state=<ServiceState.INIT: 2>>
[13:26:51.666] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<space_mgr state=<ServiceState.INITED: 3>>
[13:26:51.666] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<space_mgr state=<ServiceState.INITED: 3>>
[13:26:51.666] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'inventory_service', 'state_svc', 'dataconfig', 'dogma_static', 'michelle', 'dogma_im', 'buff', 'drone', 'network', 'godma', 'target', 'effect_buff_svc', 'space_mgr', 'effect_mgr', 'fx_sequencer'} service=<space_mgr state=<ServiceState.INITED: 3>>
[13:26:51.766] M [SCRIPT] [info     ] service init success: <effect_buff_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.766] M [SCRIPT] [info     ] service init success: <michelle state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.766] M [SCRIPT] [info     ] service init success: <buff state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.766] M [SCRIPT] [info     ] service init success: <space_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:51.766] M [SCRIPT] [info     ] service init success: <effect_mgr state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.767] M [SCRIPT] [info     ] service init success: <godma state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.767] M [SCRIPT] [info     ] service init success: <inventory_service state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.767] M [SCRIPT] [info     ] service init success: <dogma_im state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.767] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.767] M [SCRIPT] [info     ] service init success: <target state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.767] M [SCRIPT] [info     ] service init success: <dataconfig state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.767] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.768] M [SCRIPT] [info     ] service init success: <state_svc state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.768] M [SCRIPT] [info     ] service init success: <fx_sequencer state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.768] M [SCRIPT] [info     ] service init success: <dogma_static state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.768] M [SCRIPT] [info     ] service init success: <drone state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:51.768] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<space_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:51.832] M [SCRIPT] [info     ] _start_finish [<Service space_mgr>] service=<space_mgr state=<ServiceState.STARTED: 7>>
[13:26:51.866] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<space_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:51.866] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<space_mgr state=<ServiceState.STARTED: 7>>
[13:26:51.866] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['michelle', 'fx_sequencer'] service=<space_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:51.866] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<michelle state=<ServiceState.RUNNING: 10>>
[13:26:51.867] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<fx_sequencer state=<ServiceState.RUNNING: 10>>
[13:26:51.867] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x14603f420> service=<space_mgr state=<ServiceState.RUNNING: 10>>
[13:26:51.867] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<space_mgr state=<ServiceState.RUNNING: 10>>
[13:26:51.941] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=share_link_mgr service=<share_link_mgr state=<ServiceState.STOPPED: 1>>
[13:26:51.966] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<share_link_mgr state=<ServiceState.INIT: 2>>
[13:26:52.033] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<share_link_mgr state=<ServiceState.INITED: 3>>
[13:26:52.033] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<share_link_mgr state=<ServiceState.INITED: 3>>
[13:26:52.033] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'share_link_mgr'} service=<share_link_mgr state=<ServiceState.INITED: 3>>
[13:26:52.133] M [SCRIPT] [info     ] service init success: <share_link_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:52.133] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<share_link_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:52.199] M [SCRIPT] [info     ] _start_finish [<Service share_link_mgr>] service=<share_link_mgr state=<ServiceState.STARTED: 7>>
[13:26:52.233] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<share_link_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:52.233] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<share_link_mgr state=<ServiceState.STARTED: 7>>
[13:26:52.233] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<share_link_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:52.234] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x14603f6e0> service=<share_link_mgr state=<ServiceState.RUNNING: 10>>
[13:26:52.234] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<share_link_mgr state=<ServiceState.RUNNING: 10>>
[13:26:52.308] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=score service=<score state=<ServiceState.STOPPED: 1>>
[13:26:52.333] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<score state=<ServiceState.INIT: 2>>
[13:26:52.399] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<score state=<ServiceState.INITED: 3>>
[13:26:52.400] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<score state=<ServiceState.INITED: 3>>
[13:26:52.400] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'score'} service=<score state=<ServiceState.INITED: 3>>
[13:26:52.500] M [SCRIPT] [info     ] service init success: <score state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:52.500] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<score state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:52.566] M [SCRIPT] [info     ] _start_finish [<Service score>] service=<score state=<ServiceState.STARTED: 7>>
[13:26:52.600] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<score state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:52.600] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<score state=<ServiceState.STARTED: 7>>
[13:26:52.600] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<score state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:52.600] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1349ddd60> service=<score state=<ServiceState.RUNNING: 10>>
[13:26:52.601] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<score state=<ServiceState.RUNNING: 10>>
[13:26:52.674] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=system_func_switch service=<system_func_switch state=<ServiceState.STOPPED: 1>>
[13:26:52.700] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<system_func_switch state=<ServiceState.INIT: 2>>
[13:26:52.766] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<system_func_switch state=<ServiceState.INITED: 3>>
[13:26:52.767] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<system_func_switch state=<ServiceState.INITED: 3>>
[13:26:52.767] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'system_func_switch'} service=<system_func_switch state=<ServiceState.INITED: 3>>
[13:26:52.866] M [SCRIPT] [info     ] service init success: <system_func_switch state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:52.867] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<system_func_switch state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:52.933] M [SCRIPT] [info     ] _start_finish [<Service system_func_switch>] service=<system_func_switch state=<ServiceState.STARTED: 7>>
[13:26:52.966] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<system_func_switch state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:52.967] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<system_func_switch state=<ServiceState.STARTED: 7>>
[13:26:52.967] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<system_func_switch state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:52.967] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1322aafe0> service=<system_func_switch state=<ServiceState.RUNNING: 10>>
[13:26:52.967] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<system_func_switch state=<ServiceState.RUNNING: 10>>
[13:26:53.042] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=greater_rift_mgr service=<greater_rift_mgr state=<ServiceState.STOPPED: 1>>
[13:26:53.066] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<greater_rift_mgr state=<ServiceState.INIT: 2>>
[13:26:53.133] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<greater_rift_mgr state=<ServiceState.INITED: 3>>
[13:26:53.133] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<greater_rift_mgr state=<ServiceState.INITED: 3>>
[13:26:53.134] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'greater_rift_mgr'} service=<greater_rift_mgr state=<ServiceState.INITED: 3>>
[13:26:53.233] M [SCRIPT] [info     ] service init success: <greater_rift_mgr state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:53.233] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<greater_rift_mgr state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:53.300] M [SCRIPT] [info     ] _start_finish [<Service greater_rift_mgr>] service=<greater_rift_mgr state=<ServiceState.STARTED: 7>>
[13:26:53.333] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<greater_rift_mgr state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:53.334] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<greater_rift_mgr state=<ServiceState.STARTED: 7>>
[13:26:53.334] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<greater_rift_mgr state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:53.334] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1394d5c60> service=<greater_rift_mgr state=<ServiceState.RUNNING: 10>>
[13:26:53.334] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<greater_rift_mgr state=<ServiceState.RUNNING: 10>>
[13:26:53.408] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=profiling_svc service=<profiling_svc state=<ServiceState.STOPPED: 1>>
[13:26:53.433] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<profiling_svc state=<ServiceState.INIT: 2>>
[13:26:53.500] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<profiling_svc state=<ServiceState.INITED: 3>>
[13:26:53.500] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<profiling_svc state=<ServiceState.INITED: 3>>
[13:26:53.501] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'profiling_svc'} service=<profiling_svc state=<ServiceState.INITED: 3>>
[13:26:53.600] M [SCRIPT] [info     ] service init success: <profiling_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:53.600] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<profiling_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:53.667] M [SCRIPT] [info     ] _start_finish [<Service profiling_svc>] service=<profiling_svc state=<ServiceState.STARTED: 7>>
[13:26:53.700] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<profiling_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:53.701] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<profiling_svc state=<ServiceState.STARTED: 7>>
[13:26:53.701] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<profiling_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:53.701] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x1396ba920> service=<profiling_svc state=<ServiceState.RUNNING: 10>>
[13:26:53.701] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<profiling_svc state=<ServiceState.RUNNING: 10>>
[13:26:53.777] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=ai_svc service=<ai_svc state=<ServiceState.STOPPED: 1>>
[13:26:53.800] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<ai_svc state=<ServiceState.INIT: 2>>
[13:26:53.867] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<ai_svc state=<ServiceState.INITED: 3>>
[13:26:53.867] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<ai_svc state=<ServiceState.INITED: 3>>
[13:26:53.867] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'macho_net', 'ai_svc', 'network', 'task'} service=<ai_svc state=<ServiceState.INITED: 3>>
[13:26:53.967] M [SCRIPT] [info     ] service init success: <ai_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:53.967] M [SCRIPT] [info     ] service init success: <network state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:53.968] M [SCRIPT] [info     ] service init success: <macho_net state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:53.968] M [SCRIPT] [info     ] service init success: <task state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:53.968] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<ai_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:54.034] M [SCRIPT] [info     ] _start_finish [<Service ai_svc>] service=<ai_svc state=<ServiceState.STARTED: 7>>
[13:26:54.067] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<ai_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:54.067] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<ai_svc state=<ServiceState.STARTED: 7>>
[13:26:54.068] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['task'] service=<ai_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:54.068] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<task state=<ServiceState.RUNNING: 10>>
[13:26:54.068] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x13bac8120> service=<ai_svc state=<ServiceState.RUNNING: 10>>
[13:26:54.069] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<ai_svc state=<ServiceState.RUNNING: 10>>
[13:26:54.153] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=building_svc service=<building_svc state=<ServiceState.STOPPED: 1>>
[13:26:54.167] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<building_svc state=<ServiceState.INIT: 2>>
[13:26:54.234] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<building_svc state=<ServiceState.INITED: 3>>
[13:26:54.234] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<building_svc state=<ServiceState.INITED: 3>>
[13:26:54.234] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'building_svc'} service=<building_svc state=<ServiceState.INITED: 3>>
[13:26:54.334] M [SCRIPT] [info     ] service init success: <building_svc state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:54.334] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<building_svc state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:54.401] M [SCRIPT] [info     ] _start_finish [<Service building_svc>] service=<building_svc state=<ServiceState.STARTED: 7>>
[13:26:54.434] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<building_svc state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:54.434] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<building_svc state=<ServiceState.STARTED: 7>>
[13:26:54.434] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<building_svc state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:54.435] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x139717d20> service=<building_svc state=<ServiceState.RUNNING: 10>>
[13:26:54.435] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<building_svc state=<ServiceState.RUNNING: 10>>
[13:26:54.509] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=hibernator service=<hibernator state=<ServiceState.STOPPED: 1>>
[13:26:54.534] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<hibernator state=<ServiceState.INIT: 2>>
[13:26:54.601] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<hibernator state=<ServiceState.INITED: 3>>
[13:26:54.601] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<hibernator state=<ServiceState.INITED: 3>>
[13:26:54.601] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'hibernator'} service=<hibernator state=<ServiceState.INITED: 3>>
[13:26:54.701] M [SCRIPT] [info     ] service init success: <hibernator state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:54.701] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<hibernator state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:54.767] M [SCRIPT] [info     ] _start_finish [<Service hibernator>] service=<hibernator state=<ServiceState.STARTED: 7>>
[13:26:54.801] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<hibernator state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:54.801] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<hibernator state=<ServiceState.STARTED: 7>>
[13:26:54.801] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=[] service=<hibernator state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:54.802] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x139717060> service=<hibernator state=<ServiceState.RUNNING: 10>>
[13:26:54.802] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<hibernator state=<ServiceState.RUNNING: 10>>
[13:26:54.876] M [SCRIPT] [info     ] _create_service [ServiceManagerClient] name=structure_jump service=<structure_jump state=<ServiceState.STOPPED: 1>>
[13:26:54.901] M [SCRIPT] [info     ] _launch_service wait_inited [ServiceManagerClient] service=<structure_jump state=<ServiceState.INIT: 2>>
[13:26:54.967] M [SCRIPT] [info     ] _launch_service init_finished [ServiceManagerClient] service=<structure_jump state=<ServiceState.INITED: 3>>
[13:26:54.968] M [SCRIPT] [info     ] _start_service after inited [ServiceManagerClient] service=<structure_jump state=<ServiceState.INITED: 3>>
[13:26:54.968] M [SCRIPT] [info     ] _start_service init_all_dependencies [ServiceManagerClient] all_services={'structure_jump', 'view_manager'} service=<structure_jump state=<ServiceState.INITED: 3>>
[13:26:55.068] M [SCRIPT] [info     ] service init success: <view_manager state=<ServiceState.RUNNING: 10> e=None> [ServiceManagerClient]
[13:26:55.068] M [SCRIPT] [info     ] service init success: <structure_jump state=<ServiceState.INITED: 3> e=None> [ServiceManagerClient]
[13:26:55.068] M [SCRIPT] [info     ] _service_startup start_deps [ServiceManagerClient] service=<structure_jump state=<ServiceState.INITED: 3>> startup_deps=[]
[13:26:55.134] M [SCRIPT] [info     ] _start_finish [<Service structure_jump>] service=<structure_jump state=<ServiceState.STARTED: 7>>
[13:26:55.168] M [SCRIPT] [info     ] _service_startup start_success [ServiceManagerClient] service=<structure_jump state=<ServiceState.STARTED: 7>> startup_deps=[]
[13:26:55.168] M [SCRIPT] [info     ] _start_service after started [ServiceManagerClient] service=<structure_jump state=<ServiceState.STARTED: 7>>
[13:26:55.168] M [SCRIPT] [info     ] _prepare_running after_started [ServiceManagerClient] all_deps=['view_manager'] service=<structure_jump state=<ServiceState.RUNNING_DEPS: 8>>
[13:26:55.168] M [SCRIPT] [info     ] _prepare_running in_running [ServiceManagerClient] service=<view_manager state=<ServiceState.RUNNING: 10>>
[13:26:55.169] M [SCRIPT] [info     ] register_events [ServiceManagerClient] listener=<WeakValueDictionary at 0x10d4e1320> service=<structure_jump state=<ServiceState.RUNNING: 10>>
[13:26:55.169] M [SCRIPT] [info     ] _start_service success [ServiceManagerClient] service=<structure_jump state=<ServiceState.RUNNING: 10>>
[13:26:55.235] M [SCRIPT] [info     ] [init_after_login] [<Service godma>]
[13:26:55.604] M [COCOSUI] cocos load ttf : <gui_v1/fonts/shentoxcyr_bold.ttf>
[13:26:55.605] M [SCRIPT] [info     ] [get_sprite_frame_fail][msg=spriteframe '' gui_v1/login_new/login_decorate_light_pic.png not found] [cocos_ext.cocos_api]
[13:26:55.606] M [SCRIPT] [info     ] [get_sprite_frame_fail][msg=spriteframe '' gui_v1/chat_new/01/icon_lock.png not found] [cocos_ext.cocos_api]
[13:26:55.617] M [SCRIPT] [info     ] [get_sprite_frame_fail][msg=spriteframe '' gui_v1/login_new/login_decorate_light_pic.png not found] [cocos_ext.cocos_api]
[13:26:55.618] M [SCRIPT] [info     ] [get_sprite_frame_fail][msg=spriteframe '' gui_v1/chat_new/01/icon_lock.png not found] [cocos_ext.cocos_api]
[13:26:55.625] M [SCRIPT] [info     ] [get_sprite_frame_fail][msg=spriteframe '' gui_v1/login_new/login_decorate_light_pic.png not found] [cocos_ext.cocos_api]
[13:26:55.625] M [SCRIPT] [info     ] [get_sprite_frame_fail][msg=spriteframe '' gui_v1/chat_new/01/icon_lock.png not found] [cocos_ext.cocos_api]
[13:26:55.668] M [SCRIPT] [set_path][new_path=eve][current_path=eve]
[13:27:07.492] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:27:07.494] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:27:07.499] M [IOS] application:shouldAllowExtensionPointIdentifier:
[13:27:07.773] M [IOS] applicationWillResignActive:
[13:27:07.773] M [SCRIPT] [INFO][on_pause]
[13:27:11.762] M [IOS] applicationDidEnterBackground:
[13:27:11.765] M [IOS] application:shouldSaveApplicationState:
[13:27:11.877] M [IOS] application:layoutSubViews:
[13:27:11.979] M [IOS] application:layoutSubViews:
